syntax = "proto3";
//option go_package = "./";

package msg;

message CreatePoolRequest{
    string name = 1;
    int32 pgsize = 2;
    int32 pgcount = 3;
    string failuredomain = 4;
    string root = 5;
}

message CreatePoolResponse{
    bool ok = 1;
    int32 poolid = 2;
}

message ListPoolsRequest{
}

message poolinfo{
    int32
    poolid = 1;
    string name = 2;
    int32 pgsize = 3;
    int32 pgcount = 4;
    string failuredomain = 5;
    string root = 6;
}

message ListPoolsResponse{
    repeated poolinfo pi = 1;
}


message DeletePoolRequest{
    string name = 1;
}

message DeletePoolResponse{
    bool ok = 1;
}

message ApplyIDRequest{
    string uuid = 1;
}

message ApplyIDResponse{
    string uuid = 1;
    int32 id = 2;
}

message BootRequest {
    int32 osd_id = 1;
    string uuid = 2;
    int64 size = 3;
    uint32 port = 4;
    string address = 5;
    string host = 6;
}

message PGInfo {
    int32 pgid = 1;
    int64 version = 2;
    int32 state = 3;
    repeated int32 osdid = 4;
    repeated int32 newosdid = 5;
}

message PGInfos {
    repeated PGInfo pi = 1;
}

enum GetPgMapErrorCode
{
    pgMapGetOk = 0;
    pgMapclientVersionHigher = 1;
    PgMapclusterNoPools = 2;
    PgMapSameVersion = 3;
}

message GetPgMapRequest{
    map<int32, int64> pool_versions = 1;
}

// when osd restarts, following infomation is changed(host may not)
message OsdDynamicInfo{
	int32 osdid = 1;
	string address =2;
	int32 port  =3;
	bool isin    = 4;
	bool isup     = 5;
    bool ispendingcreate = 6;
}

message GetPgMapResponse {
    map<int32, GetPgMapErrorCode> errorcode = 1;
    map<int32, int64> poolid_pgmapversion = 2;
    map<int32, PGInfos> pgs = 3;
}

message GetOsdMapRequest{
    int32 osdid = 1;
    int64 currentversion = 2;
}



enum OsdMapErrorCode
{
    ok = 0;
    clientVersionHigher = 1;
    clientVersionInvalid = 2;
    noOsdsExist = 3;
}

message GetOsdMapResponse {
    OsdMapErrorCode errorcode = 1;
    int64 osdmapversion = 2;
    repeated OsdDynamicInfo osds = 3;
}

message GetClusterMapRequest{
    GetOsdMapRequest gom_request = 1;
    GetPgMapRequest  gpm_request = 2;
}

message GetClusterMapResponse {
    GetOsdMapResponse gom_response = 1;
    GetPgMapResponse  gpm_response = 2;
}


message BootResponse {
    bool ok = 1;
}

message OsdStopRequest {
    int32 id = 1;
}


message OsdStopResponse {
    bool ok = 1;
}

message HeartbeatRequest {
    int32 id = 1;
}
message HeartbeatResponse {
    bool ok = 1;
}

message ImageInfo{
    string poolname=1;
    string imagename=2;
    int64 size=3;
    int64 object_size=4;
}

message  CreateImageRequest{
    string poolname=1;
    string imagename=2;
    int64 size=3;
    int64 object_size=4;
}

enum CreateImageErrorCode
{
    createImageOk = 0;
    imageExists = 1;
    unknownPoolName = 2;
    marshalImageContextError = 3;
    putEtcdError = 4;
    imageNameTooLong = 5;
}

message  CreateImageResponse{
    CreateImageErrorCode errorcode = 1;
    ImageInfo ImageInfo = 2;
}

message  RemoveImageRequest{
     string poolname=1;
     string imagename=2;
}

enum RemoveImageErrorCode {
    removeImageOk = 0;
    imageNotFound = 1;
    removeImageFail = 2;
}

message  RemoveImageResponse{
    RemoveImageErrorCode errorcode = 1;
    ImageInfo ImageInfo=2;
}

message ResizeImageRequest{
    string poolname=1;
    string imagename=2;
    int64  size=3;
}

enum ResizeImageErrorCode {
    resizeImageOk = 0;
    resizeImageNotFound = 1;
    marshalResizeImageContextError = 2;
    putResizeImageEtcdError = 3;
}

message ResizeImageResponse{
    ResizeImageErrorCode errorcode = 1;
    ImageInfo ImageInfo=2;
}

message GetImageInfoRequest{
     string poolname=1;
     string imagename=2;
}

enum GetImageErrorCode {
    getImageOk = 0;
    getImageNotFound = 1;
}

message GetImageInfoResponse{
    GetImageErrorCode errorcode = 1;
    ImageInfo ImageInfo=2;
}

message LeaderBeElectedRequest {
    int32 leaderId = 1;
    uint64 poolId = 2;
    uint64 pgId = 3;
    repeated int32 osdList = 4;
    repeated int32 newOsdList = 5;
}

message LeaderBeElectedResponse {
    bool ok = 1;
}

message PgMemberChangeFinishRequest {
    int32  result = 1;
    uint64 poolId = 2;
    uint64 pgId = 3;
    repeated int32 osdList = 4;
}

message PgMemberChangeFinishResponse {
    bool ok = 1;
}

message Request {
    oneof union {
        BootRequest boot_request = 1;
        OsdStopRequest osd_stop_request = 2;
        HeartbeatRequest heartbeat_request = 3;
        GetOsdMapRequest get_osdmap_request = 4;
        ListPoolsRequest list_pools_request = 5;
        ApplyIDRequest apply_id_request = 6;
        CreatePoolRequest create_pool_request = 7;
        GetPgMapRequest get_pgmap_request = 8;
        DeletePoolRequest delete_pool_request = 9;
        GetClusterMapRequest get_cluster_map_request = 10;
        CreateImageRequest create_image_request=11;
        RemoveImageRequest remove_image_request=12;
        ResizeImageRequest resize_image_request=13;
        GetImageInfoRequest get_ImageInfo_Request=14;
        LeaderBeElectedRequest leader_be_elected_request=15;
        PgMemberChangeFinishRequest pg_member_change_finish_request=16;
    }
}

message Response {
    oneof union {
        BootResponse boot_response = 1;
        OsdStopResponse osd_stop_response = 2;
        HeartbeatResponse heartbeat_response = 3;
        GetOsdMapResponse get_osdmap_response = 4;
        ListPoolsResponse list_pools_response = 5;
        ApplyIDResponse apply_id_response = 6;
        CreatePoolResponse create_pool_response = 7;
        GetPgMapResponse get_pgmap_response = 8;
        DeletePoolResponse delete_pool_response = 9;
        GetClusterMapResponse get_cluster_map_response = 10;
        CreateImageResponse create_image_response=11;
        RemoveImageResponse remove_image_response=12;
        ResizeImageResponse resize_image_response=13;
        GetImageInfoResponse get_imageInfo_response=14;
        LeaderBeElectedResponse leader_be_elected_response=15;
        PgMemberChangeFinishResponse pg_member_change_finish_response=16;
    }
}
