// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft_msg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_raft_5fmsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_raft_5fmsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_raft_5fmsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_raft_5fmsg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_raft_5fmsg_2eproto;
class msg_appendentries_response_t;
class msg_appendentries_response_tDefaultTypeInternal;
extern msg_appendentries_response_tDefaultTypeInternal _msg_appendentries_response_t_default_instance_;
class msg_appendentries_t;
class msg_appendentries_tDefaultTypeInternal;
extern msg_appendentries_tDefaultTypeInternal _msg_appendentries_t_default_instance_;
class msg_installsnapshot_response_t;
class msg_installsnapshot_response_tDefaultTypeInternal;
extern msg_installsnapshot_response_tDefaultTypeInternal _msg_installsnapshot_response_t_default_instance_;
class msg_installsnapshot_t;
class msg_installsnapshot_tDefaultTypeInternal;
extern msg_installsnapshot_tDefaultTypeInternal _msg_installsnapshot_t_default_instance_;
class msg_requestvote_response_t;
class msg_requestvote_response_tDefaultTypeInternal;
extern msg_requestvote_response_tDefaultTypeInternal _msg_requestvote_response_t_default_instance_;
class msg_requestvote_t;
class msg_requestvote_tDefaultTypeInternal;
extern msg_requestvote_tDefaultTypeInternal _msg_requestvote_t_default_instance_;
class raft_entry_data_t;
class raft_entry_data_tDefaultTypeInternal;
extern raft_entry_data_tDefaultTypeInternal _raft_entry_data_t_default_instance_;
class raft_entry_t;
class raft_entry_tDefaultTypeInternal;
extern raft_entry_tDefaultTypeInternal _raft_entry_t_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::msg_appendentries_response_t* Arena::CreateMaybeMessage<::msg_appendentries_response_t>(Arena*);
template<> ::msg_appendentries_t* Arena::CreateMaybeMessage<::msg_appendentries_t>(Arena*);
template<> ::msg_installsnapshot_response_t* Arena::CreateMaybeMessage<::msg_installsnapshot_response_t>(Arena*);
template<> ::msg_installsnapshot_t* Arena::CreateMaybeMessage<::msg_installsnapshot_t>(Arena*);
template<> ::msg_requestvote_response_t* Arena::CreateMaybeMessage<::msg_requestvote_response_t>(Arena*);
template<> ::msg_requestvote_t* Arena::CreateMaybeMessage<::msg_requestvote_t>(Arena*);
template<> ::raft_entry_data_t* Arena::CreateMaybeMessage<::raft_entry_data_t>(Arena*);
template<> ::raft_entry_t* Arena::CreateMaybeMessage<::raft_entry_t>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class raft_entry_data_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:raft_entry_data_t) */ {
 public:
  inline raft_entry_data_t() : raft_entry_data_t(nullptr) {};
  virtual ~raft_entry_data_t();

  raft_entry_data_t(const raft_entry_data_t& from);
  raft_entry_data_t(raft_entry_data_t&& from) noexcept
    : raft_entry_data_t() {
    *this = ::std::move(from);
  }

  inline raft_entry_data_t& operator=(const raft_entry_data_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline raft_entry_data_t& operator=(raft_entry_data_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const raft_entry_data_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const raft_entry_data_t* internal_default_instance() {
    return reinterpret_cast<const raft_entry_data_t*>(
               &_raft_entry_data_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(raft_entry_data_t& a, raft_entry_data_t& b) {
    a.Swap(&b);
  }
  inline void Swap(raft_entry_data_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(raft_entry_data_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline raft_entry_data_t* New() const final {
    return CreateMaybeMessage<raft_entry_data_t>(nullptr);
  }

  raft_entry_data_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<raft_entry_data_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const raft_entry_data_t& from);
  void MergeFrom(const raft_entry_data_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(raft_entry_data_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "raft_entry_data_t";
  }
  protected:
  explicit raft_entry_data_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_raft_5fmsg_2eproto);
    return ::descriptor_table_raft_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjNameFieldNumber = 1,
    kBufFieldNumber = 2,
  };
  // string obj_name = 1;
  void clear_obj_name();
  const std::string& obj_name() const;
  void set_obj_name(const std::string& value);
  void set_obj_name(std::string&& value);
  void set_obj_name(const char* value);
  void set_obj_name(const char* value, size_t size);
  std::string* mutable_obj_name();
  std::string* release_obj_name();
  void set_allocated_obj_name(std::string* obj_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_obj_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_obj_name(
      std::string* obj_name);
  private:
  const std::string& _internal_obj_name() const;
  void _internal_set_obj_name(const std::string& value);
  std::string* _internal_mutable_obj_name();
  public:

  // bytes buf = 2;
  void clear_buf();
  const std::string& buf() const;
  void set_buf(const std::string& value);
  void set_buf(std::string&& value);
  void set_buf(const char* value);
  void set_buf(const void* value, size_t size);
  std::string* mutable_buf();
  std::string* release_buf();
  void set_allocated_buf(std::string* buf);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_buf();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_buf(
      std::string* buf);
  private:
  const std::string& _internal_buf() const;
  void _internal_set_buf(const std::string& value);
  std::string* _internal_mutable_buf();
  public:

  // @@protoc_insertion_point(class_scope:raft_entry_data_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr obj_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr buf_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_raft_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class raft_entry_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:raft_entry_t) */ {
 public:
  inline raft_entry_t() : raft_entry_t(nullptr) {};
  virtual ~raft_entry_t();

  raft_entry_t(const raft_entry_t& from);
  raft_entry_t(raft_entry_t&& from) noexcept
    : raft_entry_t() {
    *this = ::std::move(from);
  }

  inline raft_entry_t& operator=(const raft_entry_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline raft_entry_t& operator=(raft_entry_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const raft_entry_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const raft_entry_t* internal_default_instance() {
    return reinterpret_cast<const raft_entry_t*>(
               &_raft_entry_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(raft_entry_t& a, raft_entry_t& b) {
    a.Swap(&b);
  }
  inline void Swap(raft_entry_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(raft_entry_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline raft_entry_t* New() const final {
    return CreateMaybeMessage<raft_entry_t>(nullptr);
  }

  raft_entry_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<raft_entry_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const raft_entry_t& from);
  void MergeFrom(const raft_entry_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(raft_entry_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "raft_entry_t";
  }
  protected:
  explicit raft_entry_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_raft_5fmsg_2eproto);
    return ::descriptor_table_raft_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 4,
    kTermFieldNumber = 1,
    kIdxFieldNumber = 2,
    kTypeFieldNumber = 3,
  };
  // .raft_entry_data_t data = 4;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const ::raft_entry_data_t& data() const;
  ::raft_entry_data_t* release_data();
  ::raft_entry_data_t* mutable_data();
  void set_allocated_data(::raft_entry_data_t* data);
  private:
  const ::raft_entry_data_t& _internal_data() const;
  ::raft_entry_data_t* _internal_mutable_data();
  public:
  void unsafe_arena_set_allocated_data(
      ::raft_entry_data_t* data);
  ::raft_entry_data_t* unsafe_arena_release_data();

  // int64 term = 1;
  void clear_term();
  ::PROTOBUF_NAMESPACE_ID::int64 term() const;
  void set_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_term() const;
  void _internal_set_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 idx = 2;
  void clear_idx();
  ::PROTOBUF_NAMESPACE_ID::int64 idx() const;
  void set_idx(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_idx() const;
  void _internal_set_idx(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 type = 3;
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:raft_entry_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::raft_entry_data_t* data_;
  ::PROTOBUF_NAMESPACE_ID::int64 term_;
  ::PROTOBUF_NAMESPACE_ID::int64 idx_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_raft_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_appendentries_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg_appendentries_t) */ {
 public:
  inline msg_appendentries_t() : msg_appendentries_t(nullptr) {};
  virtual ~msg_appendentries_t();

  msg_appendentries_t(const msg_appendentries_t& from);
  msg_appendentries_t(msg_appendentries_t&& from) noexcept
    : msg_appendentries_t() {
    *this = ::std::move(from);
  }

  inline msg_appendentries_t& operator=(const msg_appendentries_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_appendentries_t& operator=(msg_appendentries_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_appendentries_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_appendentries_t* internal_default_instance() {
    return reinterpret_cast<const msg_appendentries_t*>(
               &_msg_appendentries_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(msg_appendentries_t& a, msg_appendentries_t& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_appendentries_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msg_appendentries_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_appendentries_t* New() const final {
    return CreateMaybeMessage<msg_appendentries_t>(nullptr);
  }

  msg_appendentries_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_appendentries_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_appendentries_t& from);
  void MergeFrom(const msg_appendentries_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_appendentries_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg_appendentries_t";
  }
  protected:
  explicit msg_appendentries_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_raft_5fmsg_2eproto);
    return ::descriptor_table_raft_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntriesFieldNumber = 8,
    kPoolIdFieldNumber = 2,
    kPgIdFieldNumber = 3,
    kTermFieldNumber = 4,
    kPrevLogIdxFieldNumber = 5,
    kPrevLogTermFieldNumber = 6,
    kLeaderCommitFieldNumber = 7,
    kNodeIdFieldNumber = 1,
  };
  // repeated .raft_entry_t entries = 8;
  int entries_size() const;
  private:
  int _internal_entries_size() const;
  public:
  void clear_entries();
  ::raft_entry_t* mutable_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::raft_entry_t >*
      mutable_entries();
  private:
  const ::raft_entry_t& _internal_entries(int index) const;
  ::raft_entry_t* _internal_add_entries();
  public:
  const ::raft_entry_t& entries(int index) const;
  ::raft_entry_t* add_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::raft_entry_t >&
      entries() const;

  // uint64 pool_id = 2;
  void clear_pool_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 pool_id() const;
  void set_pool_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pool_id() const;
  void _internal_set_pool_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 pg_id = 3;
  void clear_pg_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 pg_id() const;
  void set_pg_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pg_id() const;
  void _internal_set_pg_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int64 term = 4;
  void clear_term();
  ::PROTOBUF_NAMESPACE_ID::int64 term() const;
  void set_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_term() const;
  void _internal_set_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 prev_log_idx = 5;
  void clear_prev_log_idx();
  ::PROTOBUF_NAMESPACE_ID::int64 prev_log_idx() const;
  void set_prev_log_idx(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_prev_log_idx() const;
  void _internal_set_prev_log_idx(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 prev_log_term = 6;
  void clear_prev_log_term();
  ::PROTOBUF_NAMESPACE_ID::int64 prev_log_term() const;
  void set_prev_log_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_prev_log_term() const;
  void _internal_set_prev_log_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 leader_commit = 7;
  void clear_leader_commit();
  ::PROTOBUF_NAMESPACE_ID::int64 leader_commit() const;
  void set_leader_commit(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_leader_commit() const;
  void _internal_set_leader_commit(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 node_id = 1;
  void clear_node_id();
  ::PROTOBUF_NAMESPACE_ID::int32 node_id() const;
  void set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_node_id() const;
  void _internal_set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg_appendentries_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::raft_entry_t > entries_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pool_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pg_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 term_;
  ::PROTOBUF_NAMESPACE_ID::int64 prev_log_idx_;
  ::PROTOBUF_NAMESPACE_ID::int64 prev_log_term_;
  ::PROTOBUF_NAMESPACE_ID::int64 leader_commit_;
  ::PROTOBUF_NAMESPACE_ID::int32 node_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_raft_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_appendentries_response_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg_appendentries_response_t) */ {
 public:
  inline msg_appendentries_response_t() : msg_appendentries_response_t(nullptr) {};
  virtual ~msg_appendentries_response_t();

  msg_appendentries_response_t(const msg_appendentries_response_t& from);
  msg_appendentries_response_t(msg_appendentries_response_t&& from) noexcept
    : msg_appendentries_response_t() {
    *this = ::std::move(from);
  }

  inline msg_appendentries_response_t& operator=(const msg_appendentries_response_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_appendentries_response_t& operator=(msg_appendentries_response_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_appendentries_response_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_appendentries_response_t* internal_default_instance() {
    return reinterpret_cast<const msg_appendentries_response_t*>(
               &_msg_appendentries_response_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(msg_appendentries_response_t& a, msg_appendentries_response_t& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_appendentries_response_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msg_appendentries_response_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_appendentries_response_t* New() const final {
    return CreateMaybeMessage<msg_appendentries_response_t>(nullptr);
  }

  msg_appendentries_response_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_appendentries_response_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_appendentries_response_t& from);
  void MergeFrom(const msg_appendentries_response_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_appendentries_response_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg_appendentries_response_t";
  }
  protected:
  explicit msg_appendentries_response_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_raft_5fmsg_2eproto);
    return ::descriptor_table_raft_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTermFieldNumber = 2,
    kNodeIdFieldNumber = 1,
    kSuccessFieldNumber = 3,
    kLeaseFieldNumber = 4,
    kCurrentIdxFieldNumber = 5,
    kFirstIdxFieldNumber = 6,
  };
  // int64 term = 2;
  void clear_term();
  ::PROTOBUF_NAMESPACE_ID::int64 term() const;
  void set_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_term() const;
  void _internal_set_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 node_id = 1;
  void clear_node_id();
  ::PROTOBUF_NAMESPACE_ID::int32 node_id() const;
  void set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_node_id() const;
  void _internal_set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 success = 3;
  void clear_success();
  ::PROTOBUF_NAMESPACE_ID::int32 success() const;
  void set_success(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_success() const;
  void _internal_set_success(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 lease = 4;
  void clear_lease();
  ::PROTOBUF_NAMESPACE_ID::int64 lease() const;
  void set_lease(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_lease() const;
  void _internal_set_lease(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 current_idx = 5;
  void clear_current_idx();
  ::PROTOBUF_NAMESPACE_ID::int64 current_idx() const;
  void set_current_idx(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_current_idx() const;
  void _internal_set_current_idx(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 first_idx = 6;
  void clear_first_idx();
  ::PROTOBUF_NAMESPACE_ID::int64 first_idx() const;
  void set_first_idx(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_first_idx() const;
  void _internal_set_first_idx(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg_appendentries_response_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 term_;
  ::PROTOBUF_NAMESPACE_ID::int32 node_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 success_;
  ::PROTOBUF_NAMESPACE_ID::int64 lease_;
  ::PROTOBUF_NAMESPACE_ID::int64 current_idx_;
  ::PROTOBUF_NAMESPACE_ID::int64 first_idx_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_raft_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_requestvote_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg_requestvote_t) */ {
 public:
  inline msg_requestvote_t() : msg_requestvote_t(nullptr) {};
  virtual ~msg_requestvote_t();

  msg_requestvote_t(const msg_requestvote_t& from);
  msg_requestvote_t(msg_requestvote_t&& from) noexcept
    : msg_requestvote_t() {
    *this = ::std::move(from);
  }

  inline msg_requestvote_t& operator=(const msg_requestvote_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_requestvote_t& operator=(msg_requestvote_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_requestvote_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_requestvote_t* internal_default_instance() {
    return reinterpret_cast<const msg_requestvote_t*>(
               &_msg_requestvote_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(msg_requestvote_t& a, msg_requestvote_t& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_requestvote_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msg_requestvote_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_requestvote_t* New() const final {
    return CreateMaybeMessage<msg_requestvote_t>(nullptr);
  }

  msg_requestvote_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_requestvote_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_requestvote_t& from);
  void MergeFrom(const msg_requestvote_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_requestvote_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg_requestvote_t";
  }
  protected:
  explicit msg_requestvote_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_raft_5fmsg_2eproto);
    return ::descriptor_table_raft_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPoolIdFieldNumber = 2,
    kPgIdFieldNumber = 3,
    kNodeIdFieldNumber = 1,
    kCandidateIdFieldNumber = 5,
    kTermFieldNumber = 4,
    kLastLogIdxFieldNumber = 6,
    kLastLogTermFieldNumber = 7,
    kPrevoteFieldNumber = 8,
  };
  // uint64 pool_id = 2;
  void clear_pool_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 pool_id() const;
  void set_pool_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pool_id() const;
  void _internal_set_pool_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 pg_id = 3;
  void clear_pg_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 pg_id() const;
  void set_pg_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pg_id() const;
  void _internal_set_pg_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 node_id = 1;
  void clear_node_id();
  ::PROTOBUF_NAMESPACE_ID::int32 node_id() const;
  void set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_node_id() const;
  void _internal_set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 candidate_id = 5;
  void clear_candidate_id();
  ::PROTOBUF_NAMESPACE_ID::int32 candidate_id() const;
  void set_candidate_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_candidate_id() const;
  void _internal_set_candidate_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 term = 4;
  void clear_term();
  ::PROTOBUF_NAMESPACE_ID::int64 term() const;
  void set_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_term() const;
  void _internal_set_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 last_log_idx = 6;
  void clear_last_log_idx();
  ::PROTOBUF_NAMESPACE_ID::int64 last_log_idx() const;
  void set_last_log_idx(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_last_log_idx() const;
  void _internal_set_last_log_idx(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 last_log_term = 7;
  void clear_last_log_term();
  ::PROTOBUF_NAMESPACE_ID::int64 last_log_term() const;
  void set_last_log_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_last_log_term() const;
  void _internal_set_last_log_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 prevote = 8;
  void clear_prevote();
  ::PROTOBUF_NAMESPACE_ID::int32 prevote() const;
  void set_prevote(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_prevote() const;
  void _internal_set_prevote(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg_requestvote_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pool_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pg_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 node_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 candidate_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 term_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_log_idx_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_log_term_;
  ::PROTOBUF_NAMESPACE_ID::int32 prevote_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_raft_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_requestvote_response_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg_requestvote_response_t) */ {
 public:
  inline msg_requestvote_response_t() : msg_requestvote_response_t(nullptr) {};
  virtual ~msg_requestvote_response_t();

  msg_requestvote_response_t(const msg_requestvote_response_t& from);
  msg_requestvote_response_t(msg_requestvote_response_t&& from) noexcept
    : msg_requestvote_response_t() {
    *this = ::std::move(from);
  }

  inline msg_requestvote_response_t& operator=(const msg_requestvote_response_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_requestvote_response_t& operator=(msg_requestvote_response_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_requestvote_response_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_requestvote_response_t* internal_default_instance() {
    return reinterpret_cast<const msg_requestvote_response_t*>(
               &_msg_requestvote_response_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(msg_requestvote_response_t& a, msg_requestvote_response_t& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_requestvote_response_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msg_requestvote_response_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_requestvote_response_t* New() const final {
    return CreateMaybeMessage<msg_requestvote_response_t>(nullptr);
  }

  msg_requestvote_response_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_requestvote_response_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_requestvote_response_t& from);
  void MergeFrom(const msg_requestvote_response_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_requestvote_response_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg_requestvote_response_t";
  }
  protected:
  explicit msg_requestvote_response_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_raft_5fmsg_2eproto);
    return ::descriptor_table_raft_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTermFieldNumber = 2,
    kNodeIdFieldNumber = 1,
    kVoteGrantedFieldNumber = 3,
    kPrevoteFieldNumber = 4,
  };
  // int64 term = 2;
  void clear_term();
  ::PROTOBUF_NAMESPACE_ID::int64 term() const;
  void set_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_term() const;
  void _internal_set_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 node_id = 1;
  void clear_node_id();
  ::PROTOBUF_NAMESPACE_ID::int32 node_id() const;
  void set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_node_id() const;
  void _internal_set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 vote_granted = 3;
  void clear_vote_granted();
  ::PROTOBUF_NAMESPACE_ID::int32 vote_granted() const;
  void set_vote_granted(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vote_granted() const;
  void _internal_set_vote_granted(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 prevote = 4;
  void clear_prevote();
  ::PROTOBUF_NAMESPACE_ID::int32 prevote() const;
  void set_prevote(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_prevote() const;
  void _internal_set_prevote(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg_requestvote_response_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 term_;
  ::PROTOBUF_NAMESPACE_ID::int32 node_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 vote_granted_;
  ::PROTOBUF_NAMESPACE_ID::int32 prevote_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_raft_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_installsnapshot_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg_installsnapshot_t) */ {
 public:
  inline msg_installsnapshot_t() : msg_installsnapshot_t(nullptr) {};
  virtual ~msg_installsnapshot_t();

  msg_installsnapshot_t(const msg_installsnapshot_t& from);
  msg_installsnapshot_t(msg_installsnapshot_t&& from) noexcept
    : msg_installsnapshot_t() {
    *this = ::std::move(from);
  }

  inline msg_installsnapshot_t& operator=(const msg_installsnapshot_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_installsnapshot_t& operator=(msg_installsnapshot_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_installsnapshot_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_installsnapshot_t* internal_default_instance() {
    return reinterpret_cast<const msg_installsnapshot_t*>(
               &_msg_installsnapshot_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(msg_installsnapshot_t& a, msg_installsnapshot_t& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_installsnapshot_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msg_installsnapshot_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_installsnapshot_t* New() const final {
    return CreateMaybeMessage<msg_installsnapshot_t>(nullptr);
  }

  msg_installsnapshot_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_installsnapshot_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_installsnapshot_t& from);
  void MergeFrom(const msg_installsnapshot_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_installsnapshot_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg_installsnapshot_t";
  }
  protected:
  explicit msg_installsnapshot_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_raft_5fmsg_2eproto);
    return ::descriptor_table_raft_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPoolIdFieldNumber = 2,
    kPgIdFieldNumber = 3,
    kTermFieldNumber = 4,
    kLastIdxFieldNumber = 5,
    kLastTermFieldNumber = 6,
    kNodeIdFieldNumber = 1,
  };
  // uint64 pool_id = 2;
  void clear_pool_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 pool_id() const;
  void set_pool_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pool_id() const;
  void _internal_set_pool_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 pg_id = 3;
  void clear_pg_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 pg_id() const;
  void set_pg_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_pg_id() const;
  void _internal_set_pg_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int64 term = 4;
  void clear_term();
  ::PROTOBUF_NAMESPACE_ID::int64 term() const;
  void set_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_term() const;
  void _internal_set_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 last_idx = 5;
  void clear_last_idx();
  ::PROTOBUF_NAMESPACE_ID::int64 last_idx() const;
  void set_last_idx(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_last_idx() const;
  void _internal_set_last_idx(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 last_term = 6;
  void clear_last_term();
  ::PROTOBUF_NAMESPACE_ID::int64 last_term() const;
  void set_last_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_last_term() const;
  void _internal_set_last_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 node_id = 1;
  void clear_node_id();
  ::PROTOBUF_NAMESPACE_ID::int32 node_id() const;
  void set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_node_id() const;
  void _internal_set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:msg_installsnapshot_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pool_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 pg_id_;
  ::PROTOBUF_NAMESPACE_ID::int64 term_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_idx_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_term_;
  ::PROTOBUF_NAMESPACE_ID::int32 node_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_raft_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_installsnapshot_response_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg_installsnapshot_response_t) */ {
 public:
  inline msg_installsnapshot_response_t() : msg_installsnapshot_response_t(nullptr) {};
  virtual ~msg_installsnapshot_response_t();

  msg_installsnapshot_response_t(const msg_installsnapshot_response_t& from);
  msg_installsnapshot_response_t(msg_installsnapshot_response_t&& from) noexcept
    : msg_installsnapshot_response_t() {
    *this = ::std::move(from);
  }

  inline msg_installsnapshot_response_t& operator=(const msg_installsnapshot_response_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_installsnapshot_response_t& operator=(msg_installsnapshot_response_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_installsnapshot_response_t& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_installsnapshot_response_t* internal_default_instance() {
    return reinterpret_cast<const msg_installsnapshot_response_t*>(
               &_msg_installsnapshot_response_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(msg_installsnapshot_response_t& a, msg_installsnapshot_response_t& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_installsnapshot_response_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msg_installsnapshot_response_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_installsnapshot_response_t* New() const final {
    return CreateMaybeMessage<msg_installsnapshot_response_t>(nullptr);
  }

  msg_installsnapshot_response_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_installsnapshot_response_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_installsnapshot_response_t& from);
  void MergeFrom(const msg_installsnapshot_response_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_installsnapshot_response_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg_installsnapshot_response_t";
  }
  protected:
  explicit msg_installsnapshot_response_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_raft_5fmsg_2eproto);
    return ::descriptor_table_raft_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTermFieldNumber = 2,
    kNodeIdFieldNumber = 1,
    kCompleteFieldNumber = 4,
    kLastIdxFieldNumber = 3,
    kLeaseFieldNumber = 5,
  };
  // int64 term = 2;
  void clear_term();
  ::PROTOBUF_NAMESPACE_ID::int64 term() const;
  void set_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_term() const;
  void _internal_set_term(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 node_id = 1;
  void clear_node_id();
  ::PROTOBUF_NAMESPACE_ID::int32 node_id() const;
  void set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_node_id() const;
  void _internal_set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 complete = 4;
  void clear_complete();
  ::PROTOBUF_NAMESPACE_ID::int32 complete() const;
  void set_complete(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_complete() const;
  void _internal_set_complete(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 last_idx = 3;
  void clear_last_idx();
  ::PROTOBUF_NAMESPACE_ID::int64 last_idx() const;
  void set_last_idx(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_last_idx() const;
  void _internal_set_last_idx(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 lease = 5;
  void clear_lease();
  ::PROTOBUF_NAMESPACE_ID::int64 lease() const;
  void set_lease(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_lease() const;
  void _internal_set_lease(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg_installsnapshot_response_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int64 term_;
  ::PROTOBUF_NAMESPACE_ID::int32 node_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 complete_;
  ::PROTOBUF_NAMESPACE_ID::int64 last_idx_;
  ::PROTOBUF_NAMESPACE_ID::int64 lease_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_raft_5fmsg_2eproto;
};
// ===================================================================

class rpc_service_raft_Stub;

class rpc_service_raft : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline rpc_service_raft() {};
 public:
  virtual ~rpc_service_raft();

  typedef rpc_service_raft_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void append_entries(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::msg_appendentries_t* request,
                       ::msg_appendentries_response_t* response,
                       ::google::protobuf::Closure* done);
  virtual void vote(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::msg_requestvote_t* request,
                       ::msg_requestvote_response_t* response,
                       ::google::protobuf::Closure* done);
  virtual void install_snapshot(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::msg_installsnapshot_t* request,
                       ::msg_installsnapshot_response_t* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(rpc_service_raft);
};

class rpc_service_raft_Stub : public rpc_service_raft {
 public:
  rpc_service_raft_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  rpc_service_raft_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~rpc_service_raft_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements rpc_service_raft ------------------------------------------

  void append_entries(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::msg_appendentries_t* request,
                       ::msg_appendentries_response_t* response,
                       ::google::protobuf::Closure* done);
  void vote(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::msg_requestvote_t* request,
                       ::msg_requestvote_response_t* response,
                       ::google::protobuf::Closure* done);
  void install_snapshot(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::msg_installsnapshot_t* request,
                       ::msg_installsnapshot_response_t* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(rpc_service_raft_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// raft_entry_data_t

// string obj_name = 1;
inline void raft_entry_data_t::clear_obj_name() {
  obj_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& raft_entry_data_t::obj_name() const {
  // @@protoc_insertion_point(field_get:raft_entry_data_t.obj_name)
  return _internal_obj_name();
}
inline void raft_entry_data_t::set_obj_name(const std::string& value) {
  _internal_set_obj_name(value);
  // @@protoc_insertion_point(field_set:raft_entry_data_t.obj_name)
}
inline std::string* raft_entry_data_t::mutable_obj_name() {
  // @@protoc_insertion_point(field_mutable:raft_entry_data_t.obj_name)
  return _internal_mutable_obj_name();
}
inline const std::string& raft_entry_data_t::_internal_obj_name() const {
  return obj_name_.Get();
}
inline void raft_entry_data_t::_internal_set_obj_name(const std::string& value) {
  
  obj_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void raft_entry_data_t::set_obj_name(std::string&& value) {
  
  obj_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:raft_entry_data_t.obj_name)
}
inline void raft_entry_data_t::set_obj_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  obj_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:raft_entry_data_t.obj_name)
}
inline void raft_entry_data_t::set_obj_name(const char* value,
    size_t size) {
  
  obj_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:raft_entry_data_t.obj_name)
}
inline std::string* raft_entry_data_t::_internal_mutable_obj_name() {
  
  return obj_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* raft_entry_data_t::release_obj_name() {
  // @@protoc_insertion_point(field_release:raft_entry_data_t.obj_name)
  return obj_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void raft_entry_data_t::set_allocated_obj_name(std::string* obj_name) {
  if (obj_name != nullptr) {
    
  } else {
    
  }
  obj_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), obj_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:raft_entry_data_t.obj_name)
}
inline std::string* raft_entry_data_t::unsafe_arena_release_obj_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:raft_entry_data_t.obj_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return obj_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void raft_entry_data_t::unsafe_arena_set_allocated_obj_name(
    std::string* obj_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (obj_name != nullptr) {
    
  } else {
    
  }
  obj_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      obj_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:raft_entry_data_t.obj_name)
}

// bytes buf = 2;
inline void raft_entry_data_t::clear_buf() {
  buf_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& raft_entry_data_t::buf() const {
  // @@protoc_insertion_point(field_get:raft_entry_data_t.buf)
  return _internal_buf();
}
inline void raft_entry_data_t::set_buf(const std::string& value) {
  _internal_set_buf(value);
  // @@protoc_insertion_point(field_set:raft_entry_data_t.buf)
}
inline std::string* raft_entry_data_t::mutable_buf() {
  // @@protoc_insertion_point(field_mutable:raft_entry_data_t.buf)
  return _internal_mutable_buf();
}
inline const std::string& raft_entry_data_t::_internal_buf() const {
  return buf_.Get();
}
inline void raft_entry_data_t::_internal_set_buf(const std::string& value) {
  
  buf_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void raft_entry_data_t::set_buf(std::string&& value) {
  
  buf_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:raft_entry_data_t.buf)
}
inline void raft_entry_data_t::set_buf(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  buf_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:raft_entry_data_t.buf)
}
inline void raft_entry_data_t::set_buf(const void* value,
    size_t size) {
  
  buf_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:raft_entry_data_t.buf)
}
inline std::string* raft_entry_data_t::_internal_mutable_buf() {
  
  return buf_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* raft_entry_data_t::release_buf() {
  // @@protoc_insertion_point(field_release:raft_entry_data_t.buf)
  return buf_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void raft_entry_data_t::set_allocated_buf(std::string* buf) {
  if (buf != nullptr) {
    
  } else {
    
  }
  buf_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), buf,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:raft_entry_data_t.buf)
}
inline std::string* raft_entry_data_t::unsafe_arena_release_buf() {
  // @@protoc_insertion_point(field_unsafe_arena_release:raft_entry_data_t.buf)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return buf_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void raft_entry_data_t::unsafe_arena_set_allocated_buf(
    std::string* buf) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (buf != nullptr) {
    
  } else {
    
  }
  buf_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      buf, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:raft_entry_data_t.buf)
}

// -------------------------------------------------------------------

// raft_entry_t

// int64 term = 1;
inline void raft_entry_t::clear_term() {
  term_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 raft_entry_t::_internal_term() const {
  return term_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 raft_entry_t::term() const {
  // @@protoc_insertion_point(field_get:raft_entry_t.term)
  return _internal_term();
}
inline void raft_entry_t::_internal_set_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  term_ = value;
}
inline void raft_entry_t::set_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:raft_entry_t.term)
}

// int64 idx = 2;
inline void raft_entry_t::clear_idx() {
  idx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 raft_entry_t::_internal_idx() const {
  return idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 raft_entry_t::idx() const {
  // @@protoc_insertion_point(field_get:raft_entry_t.idx)
  return _internal_idx();
}
inline void raft_entry_t::_internal_set_idx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  idx_ = value;
}
inline void raft_entry_t::set_idx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:raft_entry_t.idx)
}

// int32 type = 3;
inline void raft_entry_t::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 raft_entry_t::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 raft_entry_t::type() const {
  // @@protoc_insertion_point(field_get:raft_entry_t.type)
  return _internal_type();
}
inline void raft_entry_t::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void raft_entry_t::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:raft_entry_t.type)
}

// .raft_entry_data_t data = 4;
inline bool raft_entry_t::_internal_has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline bool raft_entry_t::has_data() const {
  return _internal_has_data();
}
inline void raft_entry_t::clear_data() {
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
inline const ::raft_entry_data_t& raft_entry_t::_internal_data() const {
  const ::raft_entry_data_t* p = data_;
  return p != nullptr ? *p : *reinterpret_cast<const ::raft_entry_data_t*>(
      &::_raft_entry_data_t_default_instance_);
}
inline const ::raft_entry_data_t& raft_entry_t::data() const {
  // @@protoc_insertion_point(field_get:raft_entry_t.data)
  return _internal_data();
}
inline void raft_entry_t::unsafe_arena_set_allocated_data(
    ::raft_entry_data_t* data) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(data_);
  }
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:raft_entry_t.data)
}
inline ::raft_entry_data_t* raft_entry_t::release_data() {
  auto temp = unsafe_arena_release_data();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::raft_entry_data_t* raft_entry_t::unsafe_arena_release_data() {
  // @@protoc_insertion_point(field_release:raft_entry_t.data)
  
  ::raft_entry_data_t* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::raft_entry_data_t* raft_entry_t::_internal_mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::raft_entry_data_t>(GetArena());
    data_ = p;
  }
  return data_;
}
inline ::raft_entry_data_t* raft_entry_t::mutable_data() {
  // @@protoc_insertion_point(field_mutable:raft_entry_t.data)
  return _internal_mutable_data();
}
inline void raft_entry_t::set_allocated_data(::raft_entry_data_t* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(data);
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:raft_entry_t.data)
}

// -------------------------------------------------------------------

// msg_appendentries_t

// int32 node_id = 1;
inline void msg_appendentries_t::clear_node_id() {
  node_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_appendentries_t::_internal_node_id() const {
  return node_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_appendentries_t::node_id() const {
  // @@protoc_insertion_point(field_get:msg_appendentries_t.node_id)
  return _internal_node_id();
}
inline void msg_appendentries_t::_internal_set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  node_id_ = value;
}
inline void msg_appendentries_t::set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:msg_appendentries_t.node_id)
}

// uint64 pool_id = 2;
inline void msg_appendentries_t::clear_pool_id() {
  pool_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msg_appendentries_t::_internal_pool_id() const {
  return pool_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msg_appendentries_t::pool_id() const {
  // @@protoc_insertion_point(field_get:msg_appendentries_t.pool_id)
  return _internal_pool_id();
}
inline void msg_appendentries_t::_internal_set_pool_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pool_id_ = value;
}
inline void msg_appendentries_t::set_pool_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pool_id(value);
  // @@protoc_insertion_point(field_set:msg_appendentries_t.pool_id)
}

// uint64 pg_id = 3;
inline void msg_appendentries_t::clear_pg_id() {
  pg_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msg_appendentries_t::_internal_pg_id() const {
  return pg_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msg_appendentries_t::pg_id() const {
  // @@protoc_insertion_point(field_get:msg_appendentries_t.pg_id)
  return _internal_pg_id();
}
inline void msg_appendentries_t::_internal_set_pg_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pg_id_ = value;
}
inline void msg_appendentries_t::set_pg_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pg_id(value);
  // @@protoc_insertion_point(field_set:msg_appendentries_t.pg_id)
}

// int64 term = 4;
inline void msg_appendentries_t::clear_term() {
  term_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_t::_internal_term() const {
  return term_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_t::term() const {
  // @@protoc_insertion_point(field_get:msg_appendentries_t.term)
  return _internal_term();
}
inline void msg_appendentries_t::_internal_set_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  term_ = value;
}
inline void msg_appendentries_t::set_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:msg_appendentries_t.term)
}

// int64 prev_log_idx = 5;
inline void msg_appendentries_t::clear_prev_log_idx() {
  prev_log_idx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_t::_internal_prev_log_idx() const {
  return prev_log_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_t::prev_log_idx() const {
  // @@protoc_insertion_point(field_get:msg_appendentries_t.prev_log_idx)
  return _internal_prev_log_idx();
}
inline void msg_appendentries_t::_internal_set_prev_log_idx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  prev_log_idx_ = value;
}
inline void msg_appendentries_t::set_prev_log_idx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_prev_log_idx(value);
  // @@protoc_insertion_point(field_set:msg_appendentries_t.prev_log_idx)
}

// int64 prev_log_term = 6;
inline void msg_appendentries_t::clear_prev_log_term() {
  prev_log_term_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_t::_internal_prev_log_term() const {
  return prev_log_term_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_t::prev_log_term() const {
  // @@protoc_insertion_point(field_get:msg_appendentries_t.prev_log_term)
  return _internal_prev_log_term();
}
inline void msg_appendentries_t::_internal_set_prev_log_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  prev_log_term_ = value;
}
inline void msg_appendentries_t::set_prev_log_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_prev_log_term(value);
  // @@protoc_insertion_point(field_set:msg_appendentries_t.prev_log_term)
}

// int64 leader_commit = 7;
inline void msg_appendentries_t::clear_leader_commit() {
  leader_commit_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_t::_internal_leader_commit() const {
  return leader_commit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_t::leader_commit() const {
  // @@protoc_insertion_point(field_get:msg_appendentries_t.leader_commit)
  return _internal_leader_commit();
}
inline void msg_appendentries_t::_internal_set_leader_commit(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  leader_commit_ = value;
}
inline void msg_appendentries_t::set_leader_commit(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_leader_commit(value);
  // @@protoc_insertion_point(field_set:msg_appendentries_t.leader_commit)
}

// repeated .raft_entry_t entries = 8;
inline int msg_appendentries_t::_internal_entries_size() const {
  return entries_.size();
}
inline int msg_appendentries_t::entries_size() const {
  return _internal_entries_size();
}
inline void msg_appendentries_t::clear_entries() {
  entries_.Clear();
}
inline ::raft_entry_t* msg_appendentries_t::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:msg_appendentries_t.entries)
  return entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::raft_entry_t >*
msg_appendentries_t::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:msg_appendentries_t.entries)
  return &entries_;
}
inline const ::raft_entry_t& msg_appendentries_t::_internal_entries(int index) const {
  return entries_.Get(index);
}
inline const ::raft_entry_t& msg_appendentries_t::entries(int index) const {
  // @@protoc_insertion_point(field_get:msg_appendentries_t.entries)
  return _internal_entries(index);
}
inline ::raft_entry_t* msg_appendentries_t::_internal_add_entries() {
  return entries_.Add();
}
inline ::raft_entry_t* msg_appendentries_t::add_entries() {
  // @@protoc_insertion_point(field_add:msg_appendentries_t.entries)
  return _internal_add_entries();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::raft_entry_t >&
msg_appendentries_t::entries() const {
  // @@protoc_insertion_point(field_list:msg_appendentries_t.entries)
  return entries_;
}

// -------------------------------------------------------------------

// msg_appendentries_response_t

// int32 node_id = 1;
inline void msg_appendentries_response_t::clear_node_id() {
  node_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_appendentries_response_t::_internal_node_id() const {
  return node_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_appendentries_response_t::node_id() const {
  // @@protoc_insertion_point(field_get:msg_appendentries_response_t.node_id)
  return _internal_node_id();
}
inline void msg_appendentries_response_t::_internal_set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  node_id_ = value;
}
inline void msg_appendentries_response_t::set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:msg_appendentries_response_t.node_id)
}

// int64 term = 2;
inline void msg_appendentries_response_t::clear_term() {
  term_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_response_t::_internal_term() const {
  return term_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_response_t::term() const {
  // @@protoc_insertion_point(field_get:msg_appendentries_response_t.term)
  return _internal_term();
}
inline void msg_appendentries_response_t::_internal_set_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  term_ = value;
}
inline void msg_appendentries_response_t::set_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:msg_appendentries_response_t.term)
}

// int32 success = 3;
inline void msg_appendentries_response_t::clear_success() {
  success_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_appendentries_response_t::_internal_success() const {
  return success_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_appendentries_response_t::success() const {
  // @@protoc_insertion_point(field_get:msg_appendentries_response_t.success)
  return _internal_success();
}
inline void msg_appendentries_response_t::_internal_set_success(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  success_ = value;
}
inline void msg_appendentries_response_t::set_success(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:msg_appendentries_response_t.success)
}

// int64 lease = 4;
inline void msg_appendentries_response_t::clear_lease() {
  lease_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_response_t::_internal_lease() const {
  return lease_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_response_t::lease() const {
  // @@protoc_insertion_point(field_get:msg_appendentries_response_t.lease)
  return _internal_lease();
}
inline void msg_appendentries_response_t::_internal_set_lease(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  lease_ = value;
}
inline void msg_appendentries_response_t::set_lease(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_lease(value);
  // @@protoc_insertion_point(field_set:msg_appendentries_response_t.lease)
}

// int64 current_idx = 5;
inline void msg_appendentries_response_t::clear_current_idx() {
  current_idx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_response_t::_internal_current_idx() const {
  return current_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_response_t::current_idx() const {
  // @@protoc_insertion_point(field_get:msg_appendentries_response_t.current_idx)
  return _internal_current_idx();
}
inline void msg_appendentries_response_t::_internal_set_current_idx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  current_idx_ = value;
}
inline void msg_appendentries_response_t::set_current_idx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_current_idx(value);
  // @@protoc_insertion_point(field_set:msg_appendentries_response_t.current_idx)
}

// int64 first_idx = 6;
inline void msg_appendentries_response_t::clear_first_idx() {
  first_idx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_response_t::_internal_first_idx() const {
  return first_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_appendentries_response_t::first_idx() const {
  // @@protoc_insertion_point(field_get:msg_appendentries_response_t.first_idx)
  return _internal_first_idx();
}
inline void msg_appendentries_response_t::_internal_set_first_idx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  first_idx_ = value;
}
inline void msg_appendentries_response_t::set_first_idx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_first_idx(value);
  // @@protoc_insertion_point(field_set:msg_appendentries_response_t.first_idx)
}

// -------------------------------------------------------------------

// msg_requestvote_t

// int32 node_id = 1;
inline void msg_requestvote_t::clear_node_id() {
  node_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_requestvote_t::_internal_node_id() const {
  return node_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_requestvote_t::node_id() const {
  // @@protoc_insertion_point(field_get:msg_requestvote_t.node_id)
  return _internal_node_id();
}
inline void msg_requestvote_t::_internal_set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  node_id_ = value;
}
inline void msg_requestvote_t::set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:msg_requestvote_t.node_id)
}

// uint64 pool_id = 2;
inline void msg_requestvote_t::clear_pool_id() {
  pool_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msg_requestvote_t::_internal_pool_id() const {
  return pool_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msg_requestvote_t::pool_id() const {
  // @@protoc_insertion_point(field_get:msg_requestvote_t.pool_id)
  return _internal_pool_id();
}
inline void msg_requestvote_t::_internal_set_pool_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pool_id_ = value;
}
inline void msg_requestvote_t::set_pool_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pool_id(value);
  // @@protoc_insertion_point(field_set:msg_requestvote_t.pool_id)
}

// uint64 pg_id = 3;
inline void msg_requestvote_t::clear_pg_id() {
  pg_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msg_requestvote_t::_internal_pg_id() const {
  return pg_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msg_requestvote_t::pg_id() const {
  // @@protoc_insertion_point(field_get:msg_requestvote_t.pg_id)
  return _internal_pg_id();
}
inline void msg_requestvote_t::_internal_set_pg_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pg_id_ = value;
}
inline void msg_requestvote_t::set_pg_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pg_id(value);
  // @@protoc_insertion_point(field_set:msg_requestvote_t.pg_id)
}

// int64 term = 4;
inline void msg_requestvote_t::clear_term() {
  term_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_requestvote_t::_internal_term() const {
  return term_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_requestvote_t::term() const {
  // @@protoc_insertion_point(field_get:msg_requestvote_t.term)
  return _internal_term();
}
inline void msg_requestvote_t::_internal_set_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  term_ = value;
}
inline void msg_requestvote_t::set_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:msg_requestvote_t.term)
}

// int32 candidate_id = 5;
inline void msg_requestvote_t::clear_candidate_id() {
  candidate_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_requestvote_t::_internal_candidate_id() const {
  return candidate_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_requestvote_t::candidate_id() const {
  // @@protoc_insertion_point(field_get:msg_requestvote_t.candidate_id)
  return _internal_candidate_id();
}
inline void msg_requestvote_t::_internal_set_candidate_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  candidate_id_ = value;
}
inline void msg_requestvote_t::set_candidate_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_candidate_id(value);
  // @@protoc_insertion_point(field_set:msg_requestvote_t.candidate_id)
}

// int64 last_log_idx = 6;
inline void msg_requestvote_t::clear_last_log_idx() {
  last_log_idx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_requestvote_t::_internal_last_log_idx() const {
  return last_log_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_requestvote_t::last_log_idx() const {
  // @@protoc_insertion_point(field_get:msg_requestvote_t.last_log_idx)
  return _internal_last_log_idx();
}
inline void msg_requestvote_t::_internal_set_last_log_idx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  last_log_idx_ = value;
}
inline void msg_requestvote_t::set_last_log_idx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_last_log_idx(value);
  // @@protoc_insertion_point(field_set:msg_requestvote_t.last_log_idx)
}

// int64 last_log_term = 7;
inline void msg_requestvote_t::clear_last_log_term() {
  last_log_term_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_requestvote_t::_internal_last_log_term() const {
  return last_log_term_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_requestvote_t::last_log_term() const {
  // @@protoc_insertion_point(field_get:msg_requestvote_t.last_log_term)
  return _internal_last_log_term();
}
inline void msg_requestvote_t::_internal_set_last_log_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  last_log_term_ = value;
}
inline void msg_requestvote_t::set_last_log_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_last_log_term(value);
  // @@protoc_insertion_point(field_set:msg_requestvote_t.last_log_term)
}

// int32 prevote = 8;
inline void msg_requestvote_t::clear_prevote() {
  prevote_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_requestvote_t::_internal_prevote() const {
  return prevote_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_requestvote_t::prevote() const {
  // @@protoc_insertion_point(field_get:msg_requestvote_t.prevote)
  return _internal_prevote();
}
inline void msg_requestvote_t::_internal_set_prevote(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  prevote_ = value;
}
inline void msg_requestvote_t::set_prevote(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_prevote(value);
  // @@protoc_insertion_point(field_set:msg_requestvote_t.prevote)
}

// -------------------------------------------------------------------

// msg_requestvote_response_t

// int32 node_id = 1;
inline void msg_requestvote_response_t::clear_node_id() {
  node_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_requestvote_response_t::_internal_node_id() const {
  return node_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_requestvote_response_t::node_id() const {
  // @@protoc_insertion_point(field_get:msg_requestvote_response_t.node_id)
  return _internal_node_id();
}
inline void msg_requestvote_response_t::_internal_set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  node_id_ = value;
}
inline void msg_requestvote_response_t::set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:msg_requestvote_response_t.node_id)
}

// int64 term = 2;
inline void msg_requestvote_response_t::clear_term() {
  term_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_requestvote_response_t::_internal_term() const {
  return term_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_requestvote_response_t::term() const {
  // @@protoc_insertion_point(field_get:msg_requestvote_response_t.term)
  return _internal_term();
}
inline void msg_requestvote_response_t::_internal_set_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  term_ = value;
}
inline void msg_requestvote_response_t::set_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:msg_requestvote_response_t.term)
}

// int32 vote_granted = 3;
inline void msg_requestvote_response_t::clear_vote_granted() {
  vote_granted_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_requestvote_response_t::_internal_vote_granted() const {
  return vote_granted_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_requestvote_response_t::vote_granted() const {
  // @@protoc_insertion_point(field_get:msg_requestvote_response_t.vote_granted)
  return _internal_vote_granted();
}
inline void msg_requestvote_response_t::_internal_set_vote_granted(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vote_granted_ = value;
}
inline void msg_requestvote_response_t::set_vote_granted(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vote_granted(value);
  // @@protoc_insertion_point(field_set:msg_requestvote_response_t.vote_granted)
}

// int32 prevote = 4;
inline void msg_requestvote_response_t::clear_prevote() {
  prevote_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_requestvote_response_t::_internal_prevote() const {
  return prevote_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_requestvote_response_t::prevote() const {
  // @@protoc_insertion_point(field_get:msg_requestvote_response_t.prevote)
  return _internal_prevote();
}
inline void msg_requestvote_response_t::_internal_set_prevote(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  prevote_ = value;
}
inline void msg_requestvote_response_t::set_prevote(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_prevote(value);
  // @@protoc_insertion_point(field_set:msg_requestvote_response_t.prevote)
}

// -------------------------------------------------------------------

// msg_installsnapshot_t

// int32 node_id = 1;
inline void msg_installsnapshot_t::clear_node_id() {
  node_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_installsnapshot_t::_internal_node_id() const {
  return node_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_installsnapshot_t::node_id() const {
  // @@protoc_insertion_point(field_get:msg_installsnapshot_t.node_id)
  return _internal_node_id();
}
inline void msg_installsnapshot_t::_internal_set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  node_id_ = value;
}
inline void msg_installsnapshot_t::set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:msg_installsnapshot_t.node_id)
}

// uint64 pool_id = 2;
inline void msg_installsnapshot_t::clear_pool_id() {
  pool_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msg_installsnapshot_t::_internal_pool_id() const {
  return pool_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msg_installsnapshot_t::pool_id() const {
  // @@protoc_insertion_point(field_get:msg_installsnapshot_t.pool_id)
  return _internal_pool_id();
}
inline void msg_installsnapshot_t::_internal_set_pool_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pool_id_ = value;
}
inline void msg_installsnapshot_t::set_pool_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pool_id(value);
  // @@protoc_insertion_point(field_set:msg_installsnapshot_t.pool_id)
}

// uint64 pg_id = 3;
inline void msg_installsnapshot_t::clear_pg_id() {
  pg_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msg_installsnapshot_t::_internal_pg_id() const {
  return pg_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 msg_installsnapshot_t::pg_id() const {
  // @@protoc_insertion_point(field_get:msg_installsnapshot_t.pg_id)
  return _internal_pg_id();
}
inline void msg_installsnapshot_t::_internal_set_pg_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  pg_id_ = value;
}
inline void msg_installsnapshot_t::set_pg_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_pg_id(value);
  // @@protoc_insertion_point(field_set:msg_installsnapshot_t.pg_id)
}

// int64 term = 4;
inline void msg_installsnapshot_t::clear_term() {
  term_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_installsnapshot_t::_internal_term() const {
  return term_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_installsnapshot_t::term() const {
  // @@protoc_insertion_point(field_get:msg_installsnapshot_t.term)
  return _internal_term();
}
inline void msg_installsnapshot_t::_internal_set_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  term_ = value;
}
inline void msg_installsnapshot_t::set_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:msg_installsnapshot_t.term)
}

// int64 last_idx = 5;
inline void msg_installsnapshot_t::clear_last_idx() {
  last_idx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_installsnapshot_t::_internal_last_idx() const {
  return last_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_installsnapshot_t::last_idx() const {
  // @@protoc_insertion_point(field_get:msg_installsnapshot_t.last_idx)
  return _internal_last_idx();
}
inline void msg_installsnapshot_t::_internal_set_last_idx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  last_idx_ = value;
}
inline void msg_installsnapshot_t::set_last_idx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_last_idx(value);
  // @@protoc_insertion_point(field_set:msg_installsnapshot_t.last_idx)
}

// int64 last_term = 6;
inline void msg_installsnapshot_t::clear_last_term() {
  last_term_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_installsnapshot_t::_internal_last_term() const {
  return last_term_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_installsnapshot_t::last_term() const {
  // @@protoc_insertion_point(field_get:msg_installsnapshot_t.last_term)
  return _internal_last_term();
}
inline void msg_installsnapshot_t::_internal_set_last_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  last_term_ = value;
}
inline void msg_installsnapshot_t::set_last_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_last_term(value);
  // @@protoc_insertion_point(field_set:msg_installsnapshot_t.last_term)
}

// -------------------------------------------------------------------

// msg_installsnapshot_response_t

// int32 node_id = 1;
inline void msg_installsnapshot_response_t::clear_node_id() {
  node_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_installsnapshot_response_t::_internal_node_id() const {
  return node_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_installsnapshot_response_t::node_id() const {
  // @@protoc_insertion_point(field_get:msg_installsnapshot_response_t.node_id)
  return _internal_node_id();
}
inline void msg_installsnapshot_response_t::_internal_set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  node_id_ = value;
}
inline void msg_installsnapshot_response_t::set_node_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_node_id(value);
  // @@protoc_insertion_point(field_set:msg_installsnapshot_response_t.node_id)
}

// int64 term = 2;
inline void msg_installsnapshot_response_t::clear_term() {
  term_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_installsnapshot_response_t::_internal_term() const {
  return term_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_installsnapshot_response_t::term() const {
  // @@protoc_insertion_point(field_get:msg_installsnapshot_response_t.term)
  return _internal_term();
}
inline void msg_installsnapshot_response_t::_internal_set_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  term_ = value;
}
inline void msg_installsnapshot_response_t::set_term(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_term(value);
  // @@protoc_insertion_point(field_set:msg_installsnapshot_response_t.term)
}

// int64 last_idx = 3;
inline void msg_installsnapshot_response_t::clear_last_idx() {
  last_idx_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_installsnapshot_response_t::_internal_last_idx() const {
  return last_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_installsnapshot_response_t::last_idx() const {
  // @@protoc_insertion_point(field_get:msg_installsnapshot_response_t.last_idx)
  return _internal_last_idx();
}
inline void msg_installsnapshot_response_t::_internal_set_last_idx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  last_idx_ = value;
}
inline void msg_installsnapshot_response_t::set_last_idx(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_last_idx(value);
  // @@protoc_insertion_point(field_set:msg_installsnapshot_response_t.last_idx)
}

// int32 complete = 4;
inline void msg_installsnapshot_response_t::clear_complete() {
  complete_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_installsnapshot_response_t::_internal_complete() const {
  return complete_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 msg_installsnapshot_response_t::complete() const {
  // @@protoc_insertion_point(field_get:msg_installsnapshot_response_t.complete)
  return _internal_complete();
}
inline void msg_installsnapshot_response_t::_internal_set_complete(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  complete_ = value;
}
inline void msg_installsnapshot_response_t::set_complete(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_complete(value);
  // @@protoc_insertion_point(field_set:msg_installsnapshot_response_t.complete)
}

// int64 lease = 5;
inline void msg_installsnapshot_response_t::clear_lease() {
  lease_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_installsnapshot_response_t::_internal_lease() const {
  return lease_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_installsnapshot_response_t::lease() const {
  // @@protoc_insertion_point(field_get:msg_installsnapshot_response_t.lease)
  return _internal_lease();
}
inline void msg_installsnapshot_response_t::_internal_set_lease(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  lease_ = value;
}
inline void msg_installsnapshot_response_t::set_lease(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_lease(value);
  // @@protoc_insertion_point(field_set:msg_installsnapshot_response_t.lease)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_raft_5fmsg_2eproto
