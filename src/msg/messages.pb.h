// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg/messages.proto

#ifndef PROTOBUF_INCLUDED_msg_2fmessages_2eproto
#define PROTOBUF_INCLUDED_msg_2fmessages_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_msg_2fmessages_2eproto 

namespace protobuf_msg_2fmessages_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[18];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_msg_2fmessages_2eproto
namespace msg {
class ApplyIDRequest;
class ApplyIDRequestDefaultTypeInternal;
extern ApplyIDRequestDefaultTypeInternal _ApplyIDRequest_default_instance_;
class ApplyIDResponse;
class ApplyIDResponseDefaultTypeInternal;
extern ApplyIDResponseDefaultTypeInternal _ApplyIDResponse_default_instance_;
class BootRequest;
class BootRequestDefaultTypeInternal;
extern BootRequestDefaultTypeInternal _BootRequest_default_instance_;
class BootResponse;
class BootResponseDefaultTypeInternal;
extern BootResponseDefaultTypeInternal _BootResponse_default_instance_;
class CreatePGRequest;
class CreatePGRequestDefaultTypeInternal;
extern CreatePGRequestDefaultTypeInternal _CreatePGRequest_default_instance_;
class CreatePGResponse;
class CreatePGResponseDefaultTypeInternal;
extern CreatePGResponseDefaultTypeInternal _CreatePGResponse_default_instance_;
class CreatePoolRequest;
class CreatePoolRequestDefaultTypeInternal;
extern CreatePoolRequestDefaultTypeInternal _CreatePoolRequest_default_instance_;
class CreatePoolResponse;
class CreatePoolResponseDefaultTypeInternal;
extern CreatePoolResponseDefaultTypeInternal _CreatePoolResponse_default_instance_;
class DeletePGRequest;
class DeletePGRequestDefaultTypeInternal;
extern DeletePGRequestDefaultTypeInternal _DeletePGRequest_default_instance_;
class DeletePGResponse;
class DeletePGResponseDefaultTypeInternal;
extern DeletePGResponseDefaultTypeInternal _DeletePGResponse_default_instance_;
class DeletePoolRequest;
class DeletePoolRequestDefaultTypeInternal;
extern DeletePoolRequestDefaultTypeInternal _DeletePoolRequest_default_instance_;
class DeletePoolResponse;
class DeletePoolResponseDefaultTypeInternal;
extern DeletePoolResponseDefaultTypeInternal _DeletePoolResponse_default_instance_;
class HeartbeatRequest;
class HeartbeatRequestDefaultTypeInternal;
extern HeartbeatRequestDefaultTypeInternal _HeartbeatRequest_default_instance_;
class HeartbeatResponse;
class HeartbeatResponseDefaultTypeInternal;
extern HeartbeatResponseDefaultTypeInternal _HeartbeatResponse_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class StopRequest;
class StopRequestDefaultTypeInternal;
extern StopRequestDefaultTypeInternal _StopRequest_default_instance_;
class StopResponse;
class StopResponseDefaultTypeInternal;
extern StopResponseDefaultTypeInternal _StopResponse_default_instance_;
}  // namespace msg
namespace google {
namespace protobuf {
template<> ::msg::ApplyIDRequest* Arena::CreateMaybeMessage<::msg::ApplyIDRequest>(Arena*);
template<> ::msg::ApplyIDResponse* Arena::CreateMaybeMessage<::msg::ApplyIDResponse>(Arena*);
template<> ::msg::BootRequest* Arena::CreateMaybeMessage<::msg::BootRequest>(Arena*);
template<> ::msg::BootResponse* Arena::CreateMaybeMessage<::msg::BootResponse>(Arena*);
template<> ::msg::CreatePGRequest* Arena::CreateMaybeMessage<::msg::CreatePGRequest>(Arena*);
template<> ::msg::CreatePGResponse* Arena::CreateMaybeMessage<::msg::CreatePGResponse>(Arena*);
template<> ::msg::CreatePoolRequest* Arena::CreateMaybeMessage<::msg::CreatePoolRequest>(Arena*);
template<> ::msg::CreatePoolResponse* Arena::CreateMaybeMessage<::msg::CreatePoolResponse>(Arena*);
template<> ::msg::DeletePGRequest* Arena::CreateMaybeMessage<::msg::DeletePGRequest>(Arena*);
template<> ::msg::DeletePGResponse* Arena::CreateMaybeMessage<::msg::DeletePGResponse>(Arena*);
template<> ::msg::DeletePoolRequest* Arena::CreateMaybeMessage<::msg::DeletePoolRequest>(Arena*);
template<> ::msg::DeletePoolResponse* Arena::CreateMaybeMessage<::msg::DeletePoolResponse>(Arena*);
template<> ::msg::HeartbeatRequest* Arena::CreateMaybeMessage<::msg::HeartbeatRequest>(Arena*);
template<> ::msg::HeartbeatResponse* Arena::CreateMaybeMessage<::msg::HeartbeatResponse>(Arena*);
template<> ::msg::Request* Arena::CreateMaybeMessage<::msg::Request>(Arena*);
template<> ::msg::Response* Arena::CreateMaybeMessage<::msg::Response>(Arena*);
template<> ::msg::StopRequest* Arena::CreateMaybeMessage<::msg::StopRequest>(Arena*);
template<> ::msg::StopResponse* Arena::CreateMaybeMessage<::msg::StopResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace msg {

// ===================================================================

class CreatePoolRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.CreatePoolRequest) */ {
 public:
  CreatePoolRequest();
  virtual ~CreatePoolRequest();

  CreatePoolRequest(const CreatePoolRequest& from);

  inline CreatePoolRequest& operator=(const CreatePoolRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreatePoolRequest(CreatePoolRequest&& from) noexcept
    : CreatePoolRequest() {
    *this = ::std::move(from);
  }

  inline CreatePoolRequest& operator=(CreatePoolRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatePoolRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreatePoolRequest* internal_default_instance() {
    return reinterpret_cast<const CreatePoolRequest*>(
               &_CreatePoolRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CreatePoolRequest* other);
  friend void swap(CreatePoolRequest& a, CreatePoolRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreatePoolRequest* New() const final {
    return CreateMaybeMessage<CreatePoolRequest>(NULL);
  }

  CreatePoolRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreatePoolRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreatePoolRequest& from);
  void MergeFrom(const CreatePoolRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatePoolRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string failuredomain = 4;
  void clear_failuredomain();
  static const int kFailuredomainFieldNumber = 4;
  const ::std::string& failuredomain() const;
  void set_failuredomain(const ::std::string& value);
  #if LANG_CXX11
  void set_failuredomain(::std::string&& value);
  #endif
  void set_failuredomain(const char* value);
  void set_failuredomain(const char* value, size_t size);
  ::std::string* mutable_failuredomain();
  ::std::string* release_failuredomain();
  void set_allocated_failuredomain(::std::string* failuredomain);

  // string root = 5;
  void clear_root();
  static const int kRootFieldNumber = 5;
  const ::std::string& root() const;
  void set_root(const ::std::string& value);
  #if LANG_CXX11
  void set_root(::std::string&& value);
  #endif
  void set_root(const char* value);
  void set_root(const char* value, size_t size);
  ::std::string* mutable_root();
  ::std::string* release_root();
  void set_allocated_root(::std::string* root);

  // int32 pgsize = 2;
  void clear_pgsize();
  static const int kPgsizeFieldNumber = 2;
  ::google::protobuf::int32 pgsize() const;
  void set_pgsize(::google::protobuf::int32 value);

  // int32 pgcount = 3;
  void clear_pgcount();
  static const int kPgcountFieldNumber = 3;
  ::google::protobuf::int32 pgcount() const;
  void set_pgcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.CreatePoolRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr failuredomain_;
  ::google::protobuf::internal::ArenaStringPtr root_;
  ::google::protobuf::int32 pgsize_;
  ::google::protobuf::int32 pgcount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreatePoolResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.CreatePoolResponse) */ {
 public:
  CreatePoolResponse();
  virtual ~CreatePoolResponse();

  CreatePoolResponse(const CreatePoolResponse& from);

  inline CreatePoolResponse& operator=(const CreatePoolResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreatePoolResponse(CreatePoolResponse&& from) noexcept
    : CreatePoolResponse() {
    *this = ::std::move(from);
  }

  inline CreatePoolResponse& operator=(CreatePoolResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatePoolResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreatePoolResponse* internal_default_instance() {
    return reinterpret_cast<const CreatePoolResponse*>(
               &_CreatePoolResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CreatePoolResponse* other);
  friend void swap(CreatePoolResponse& a, CreatePoolResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreatePoolResponse* New() const final {
    return CreateMaybeMessage<CreatePoolResponse>(NULL);
  }

  CreatePoolResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreatePoolResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreatePoolResponse& from);
  void MergeFrom(const CreatePoolResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatePoolResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool ok = 1;
  void clear_ok();
  static const int kOkFieldNumber = 1;
  bool ok() const;
  void set_ok(bool value);

  // int32 poolid = 2;
  void clear_poolid();
  static const int kPoolidFieldNumber = 2;
  ::google::protobuf::int32 poolid() const;
  void set_poolid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.CreatePoolResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool ok_;
  ::google::protobuf::int32 poolid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeletePoolRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.DeletePoolRequest) */ {
 public:
  DeletePoolRequest();
  virtual ~DeletePoolRequest();

  DeletePoolRequest(const DeletePoolRequest& from);

  inline DeletePoolRequest& operator=(const DeletePoolRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeletePoolRequest(DeletePoolRequest&& from) noexcept
    : DeletePoolRequest() {
    *this = ::std::move(from);
  }

  inline DeletePoolRequest& operator=(DeletePoolRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletePoolRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeletePoolRequest* internal_default_instance() {
    return reinterpret_cast<const DeletePoolRequest*>(
               &_DeletePoolRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DeletePoolRequest* other);
  friend void swap(DeletePoolRequest& a, DeletePoolRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeletePoolRequest* New() const final {
    return CreateMaybeMessage<DeletePoolRequest>(NULL);
  }

  DeletePoolRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeletePoolRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeletePoolRequest& from);
  void MergeFrom(const DeletePoolRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeletePoolRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:msg.DeletePoolRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeletePoolResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.DeletePoolResponse) */ {
 public:
  DeletePoolResponse();
  virtual ~DeletePoolResponse();

  DeletePoolResponse(const DeletePoolResponse& from);

  inline DeletePoolResponse& operator=(const DeletePoolResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeletePoolResponse(DeletePoolResponse&& from) noexcept
    : DeletePoolResponse() {
    *this = ::std::move(from);
  }

  inline DeletePoolResponse& operator=(DeletePoolResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletePoolResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeletePoolResponse* internal_default_instance() {
    return reinterpret_cast<const DeletePoolResponse*>(
               &_DeletePoolResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(DeletePoolResponse* other);
  friend void swap(DeletePoolResponse& a, DeletePoolResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeletePoolResponse* New() const final {
    return CreateMaybeMessage<DeletePoolResponse>(NULL);
  }

  DeletePoolResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeletePoolResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeletePoolResponse& from);
  void MergeFrom(const DeletePoolResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeletePoolResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool ok = 1;
  void clear_ok();
  static const int kOkFieldNumber = 1;
  bool ok() const;
  void set_ok(bool value);

  // @@protoc_insertion_point(class_scope:msg.DeletePoolResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool ok_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ApplyIDRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.ApplyIDRequest) */ {
 public:
  ApplyIDRequest();
  virtual ~ApplyIDRequest();

  ApplyIDRequest(const ApplyIDRequest& from);

  inline ApplyIDRequest& operator=(const ApplyIDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyIDRequest(ApplyIDRequest&& from) noexcept
    : ApplyIDRequest() {
    *this = ::std::move(from);
  }

  inline ApplyIDRequest& operator=(ApplyIDRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyIDRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyIDRequest* internal_default_instance() {
    return reinterpret_cast<const ApplyIDRequest*>(
               &_ApplyIDRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ApplyIDRequest* other);
  friend void swap(ApplyIDRequest& a, ApplyIDRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyIDRequest* New() const final {
    return CreateMaybeMessage<ApplyIDRequest>(NULL);
  }

  ApplyIDRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyIDRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyIDRequest& from);
  void MergeFrom(const ApplyIDRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyIDRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // @@protoc_insertion_point(class_scope:msg.ApplyIDRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ApplyIDResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.ApplyIDResponse) */ {
 public:
  ApplyIDResponse();
  virtual ~ApplyIDResponse();

  ApplyIDResponse(const ApplyIDResponse& from);

  inline ApplyIDResponse& operator=(const ApplyIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ApplyIDResponse(ApplyIDResponse&& from) noexcept
    : ApplyIDResponse() {
    *this = ::std::move(from);
  }

  inline ApplyIDResponse& operator=(ApplyIDResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyIDResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ApplyIDResponse* internal_default_instance() {
    return reinterpret_cast<const ApplyIDResponse*>(
               &_ApplyIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ApplyIDResponse* other);
  friend void swap(ApplyIDResponse& a, ApplyIDResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ApplyIDResponse* New() const final {
    return CreateMaybeMessage<ApplyIDResponse>(NULL);
  }

  ApplyIDResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ApplyIDResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ApplyIDResponse& from);
  void MergeFrom(const ApplyIDResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ApplyIDResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 1;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.ApplyIDResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BootRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.BootRequest) */ {
 public:
  BootRequest();
  virtual ~BootRequest();

  BootRequest(const BootRequest& from);

  inline BootRequest& operator=(const BootRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BootRequest(BootRequest&& from) noexcept
    : BootRequest() {
    *this = ::std::move(from);
  }

  inline BootRequest& operator=(BootRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BootRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BootRequest* internal_default_instance() {
    return reinterpret_cast<const BootRequest*>(
               &_BootRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(BootRequest* other);
  friend void swap(BootRequest& a, BootRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BootRequest* New() const final {
    return CreateMaybeMessage<BootRequest>(NULL);
  }

  BootRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BootRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BootRequest& from);
  void MergeFrom(const BootRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BootRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // string address = 5;
  void clear_address();
  static const int kAddressFieldNumber = 5;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // string host = 6;
  void clear_host();
  static const int kHostFieldNumber = 6;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // int32 osd_id = 1;
  void clear_osd_id();
  static const int kOsdIdFieldNumber = 1;
  ::google::protobuf::int32 osd_id() const;
  void set_osd_id(::google::protobuf::int32 value);

  // uint32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // int64 size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int64 size() const;
  void set_size(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:msg.BootRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::int32 osd_id_;
  ::google::protobuf::uint32 port_;
  ::google::protobuf::int64 size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BootResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.BootResponse) */ {
 public:
  BootResponse();
  virtual ~BootResponse();

  BootResponse(const BootResponse& from);

  inline BootResponse& operator=(const BootResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BootResponse(BootResponse&& from) noexcept
    : BootResponse() {
    *this = ::std::move(from);
  }

  inline BootResponse& operator=(BootResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BootResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BootResponse* internal_default_instance() {
    return reinterpret_cast<const BootResponse*>(
               &_BootResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(BootResponse* other);
  friend void swap(BootResponse& a, BootResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BootResponse* New() const final {
    return CreateMaybeMessage<BootResponse>(NULL);
  }

  BootResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BootResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BootResponse& from);
  void MergeFrom(const BootResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BootResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool ok = 1;
  void clear_ok();
  static const int kOkFieldNumber = 1;
  bool ok() const;
  void set_ok(bool value);

  // @@protoc_insertion_point(class_scope:msg.BootResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool ok_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.StopRequest) */ {
 public:
  StopRequest();
  virtual ~StopRequest();

  StopRequest(const StopRequest& from);

  inline StopRequest& operator=(const StopRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopRequest(StopRequest&& from) noexcept
    : StopRequest() {
    *this = ::std::move(from);
  }

  inline StopRequest& operator=(StopRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StopRequest* internal_default_instance() {
    return reinterpret_cast<const StopRequest*>(
               &_StopRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(StopRequest* other);
  friend void swap(StopRequest& a, StopRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopRequest* New() const final {
    return CreateMaybeMessage<StopRequest>(NULL);
  }

  StopRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StopRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StopRequest& from);
  void MergeFrom(const StopRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.StopRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.StopResponse) */ {
 public:
  StopResponse();
  virtual ~StopResponse();

  StopResponse(const StopResponse& from);

  inline StopResponse& operator=(const StopResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopResponse(StopResponse&& from) noexcept
    : StopResponse() {
    *this = ::std::move(from);
  }

  inline StopResponse& operator=(StopResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StopResponse* internal_default_instance() {
    return reinterpret_cast<const StopResponse*>(
               &_StopResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(StopResponse* other);
  friend void swap(StopResponse& a, StopResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopResponse* New() const final {
    return CreateMaybeMessage<StopResponse>(NULL);
  }

  StopResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StopResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StopResponse& from);
  void MergeFrom(const StopResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool ok = 1;
  void clear_ok();
  static const int kOkFieldNumber = 1;
  bool ok() const;
  void set_ok(bool value);

  // @@protoc_insertion_point(class_scope:msg.StopResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool ok_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartbeatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.HeartbeatRequest) */ {
 public:
  HeartbeatRequest();
  virtual ~HeartbeatRequest();

  HeartbeatRequest(const HeartbeatRequest& from);

  inline HeartbeatRequest& operator=(const HeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartbeatRequest(HeartbeatRequest&& from) noexcept
    : HeartbeatRequest() {
    *this = ::std::move(from);
  }

  inline HeartbeatRequest& operator=(HeartbeatRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartbeatRequest* internal_default_instance() {
    return reinterpret_cast<const HeartbeatRequest*>(
               &_HeartbeatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(HeartbeatRequest* other);
  friend void swap(HeartbeatRequest& a, HeartbeatRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartbeatRequest* New() const final {
    return CreateMaybeMessage<HeartbeatRequest>(NULL);
  }

  HeartbeatRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartbeatRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartbeatRequest& from);
  void MergeFrom(const HeartbeatRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartbeatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.HeartbeatRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartbeatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.HeartbeatResponse) */ {
 public:
  HeartbeatResponse();
  virtual ~HeartbeatResponse();

  HeartbeatResponse(const HeartbeatResponse& from);

  inline HeartbeatResponse& operator=(const HeartbeatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartbeatResponse(HeartbeatResponse&& from) noexcept
    : HeartbeatResponse() {
    *this = ::std::move(from);
  }

  inline HeartbeatResponse& operator=(HeartbeatResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartbeatResponse* internal_default_instance() {
    return reinterpret_cast<const HeartbeatResponse*>(
               &_HeartbeatResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(HeartbeatResponse* other);
  friend void swap(HeartbeatResponse& a, HeartbeatResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartbeatResponse* New() const final {
    return CreateMaybeMessage<HeartbeatResponse>(NULL);
  }

  HeartbeatResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartbeatResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartbeatResponse& from);
  void MergeFrom(const HeartbeatResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartbeatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool ok = 1;
  void clear_ok();
  static const int kOkFieldNumber = 1;
  bool ok() const;
  void set_ok(bool value);

  // @@protoc_insertion_point(class_scope:msg.HeartbeatResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool ok_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreatePGRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.CreatePGRequest) */ {
 public:
  CreatePGRequest();
  virtual ~CreatePGRequest();

  CreatePGRequest(const CreatePGRequest& from);

  inline CreatePGRequest& operator=(const CreatePGRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreatePGRequest(CreatePGRequest&& from) noexcept
    : CreatePGRequest() {
    *this = ::std::move(from);
  }

  inline CreatePGRequest& operator=(CreatePGRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatePGRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreatePGRequest* internal_default_instance() {
    return reinterpret_cast<const CreatePGRequest*>(
               &_CreatePGRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CreatePGRequest* other);
  friend void swap(CreatePGRequest& a, CreatePGRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreatePGRequest* New() const final {
    return CreateMaybeMessage<CreatePGRequest>(NULL);
  }

  CreatePGRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreatePGRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreatePGRequest& from);
  void MergeFrom(const CreatePGRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatePGRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 pgid = 2;
  void clear_pgid();
  static const int kPgidFieldNumber = 2;
  ::google::protobuf::int32 pgid() const;
  void set_pgid(::google::protobuf::int32 value);

  // int32 other_osd1 = 3;
  void clear_other_osd1();
  static const int kOtherOsd1FieldNumber = 3;
  ::google::protobuf::int32 other_osd1() const;
  void set_other_osd1(::google::protobuf::int32 value);

  // int32 other_osd2 = 4;
  void clear_other_osd2();
  static const int kOtherOsd2FieldNumber = 4;
  ::google::protobuf::int32 other_osd2() const;
  void set_other_osd2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.CreatePGRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 pgid_;
  ::google::protobuf::int32 other_osd1_;
  ::google::protobuf::int32 other_osd2_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreatePGResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.CreatePGResponse) */ {
 public:
  CreatePGResponse();
  virtual ~CreatePGResponse();

  CreatePGResponse(const CreatePGResponse& from);

  inline CreatePGResponse& operator=(const CreatePGResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreatePGResponse(CreatePGResponse&& from) noexcept
    : CreatePGResponse() {
    *this = ::std::move(from);
  }

  inline CreatePGResponse& operator=(CreatePGResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatePGResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreatePGResponse* internal_default_instance() {
    return reinterpret_cast<const CreatePGResponse*>(
               &_CreatePGResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(CreatePGResponse* other);
  friend void swap(CreatePGResponse& a, CreatePGResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreatePGResponse* New() const final {
    return CreateMaybeMessage<CreatePGResponse>(NULL);
  }

  CreatePGResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreatePGResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreatePGResponse& from);
  void MergeFrom(const CreatePGResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatePGResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool ok = 1;
  void clear_ok();
  static const int kOkFieldNumber = 1;
  bool ok() const;
  void set_ok(bool value);

  // @@protoc_insertion_point(class_scope:msg.CreatePGResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool ok_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeletePGRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.DeletePGRequest) */ {
 public:
  DeletePGRequest();
  virtual ~DeletePGRequest();

  DeletePGRequest(const DeletePGRequest& from);

  inline DeletePGRequest& operator=(const DeletePGRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeletePGRequest(DeletePGRequest&& from) noexcept
    : DeletePGRequest() {
    *this = ::std::move(from);
  }

  inline DeletePGRequest& operator=(DeletePGRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletePGRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeletePGRequest* internal_default_instance() {
    return reinterpret_cast<const DeletePGRequest*>(
               &_DeletePGRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(DeletePGRequest* other);
  friend void swap(DeletePGRequest& a, DeletePGRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeletePGRequest* New() const final {
    return CreateMaybeMessage<DeletePGRequest>(NULL);
  }

  DeletePGRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeletePGRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeletePGRequest& from);
  void MergeFrom(const DeletePGRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeletePGRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 pgid = 2;
  void clear_pgid();
  static const int kPgidFieldNumber = 2;
  ::google::protobuf::int32 pgid() const;
  void set_pgid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.DeletePGRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 pgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeletePGResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.DeletePGResponse) */ {
 public:
  DeletePGResponse();
  virtual ~DeletePGResponse();

  DeletePGResponse(const DeletePGResponse& from);

  inline DeletePGResponse& operator=(const DeletePGResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeletePGResponse(DeletePGResponse&& from) noexcept
    : DeletePGResponse() {
    *this = ::std::move(from);
  }

  inline DeletePGResponse& operator=(DeletePGResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletePGResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeletePGResponse* internal_default_instance() {
    return reinterpret_cast<const DeletePGResponse*>(
               &_DeletePGResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(DeletePGResponse* other);
  friend void swap(DeletePGResponse& a, DeletePGResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeletePGResponse* New() const final {
    return CreateMaybeMessage<DeletePGResponse>(NULL);
  }

  DeletePGResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeletePGResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeletePGResponse& from);
  void MergeFrom(const DeletePGResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeletePGResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool ok = 1;
  void clear_ok();
  static const int kOkFieldNumber = 1;
  bool ok() const;
  void set_ok(bool value);

  // @@protoc_insertion_point(class_scope:msg.DeletePGResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool ok_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  enum UnionCase {
    kBootRequest = 1,
    kStopRequest = 2,
    kHeartbeatRequest = 3,
    kCreatePgRequest = 4,
    kDeletePgRequest = 5,
    kApplyIdRequest = 6,
    kCreatePoolRequest = 7,
    UNION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const final {
    return CreateMaybeMessage<Request>(NULL);
  }

  Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .msg.BootRequest boot_request = 1;
  bool has_boot_request() const;
  void clear_boot_request();
  static const int kBootRequestFieldNumber = 1;
  private:
  const ::msg::BootRequest& _internal_boot_request() const;
  public:
  const ::msg::BootRequest& boot_request() const;
  ::msg::BootRequest* release_boot_request();
  ::msg::BootRequest* mutable_boot_request();
  void set_allocated_boot_request(::msg::BootRequest* boot_request);

  // .msg.StopRequest stop_request = 2;
  bool has_stop_request() const;
  void clear_stop_request();
  static const int kStopRequestFieldNumber = 2;
  private:
  const ::msg::StopRequest& _internal_stop_request() const;
  public:
  const ::msg::StopRequest& stop_request() const;
  ::msg::StopRequest* release_stop_request();
  ::msg::StopRequest* mutable_stop_request();
  void set_allocated_stop_request(::msg::StopRequest* stop_request);

  // .msg.HeartbeatRequest heartbeat_request = 3;
  bool has_heartbeat_request() const;
  void clear_heartbeat_request();
  static const int kHeartbeatRequestFieldNumber = 3;
  private:
  const ::msg::HeartbeatRequest& _internal_heartbeat_request() const;
  public:
  const ::msg::HeartbeatRequest& heartbeat_request() const;
  ::msg::HeartbeatRequest* release_heartbeat_request();
  ::msg::HeartbeatRequest* mutable_heartbeat_request();
  void set_allocated_heartbeat_request(::msg::HeartbeatRequest* heartbeat_request);

  // .msg.CreatePGRequest create_pg_request = 4;
  bool has_create_pg_request() const;
  void clear_create_pg_request();
  static const int kCreatePgRequestFieldNumber = 4;
  private:
  const ::msg::CreatePGRequest& _internal_create_pg_request() const;
  public:
  const ::msg::CreatePGRequest& create_pg_request() const;
  ::msg::CreatePGRequest* release_create_pg_request();
  ::msg::CreatePGRequest* mutable_create_pg_request();
  void set_allocated_create_pg_request(::msg::CreatePGRequest* create_pg_request);

  // .msg.DeletePGRequest delete_pg_request = 5;
  bool has_delete_pg_request() const;
  void clear_delete_pg_request();
  static const int kDeletePgRequestFieldNumber = 5;
  private:
  const ::msg::DeletePGRequest& _internal_delete_pg_request() const;
  public:
  const ::msg::DeletePGRequest& delete_pg_request() const;
  ::msg::DeletePGRequest* release_delete_pg_request();
  ::msg::DeletePGRequest* mutable_delete_pg_request();
  void set_allocated_delete_pg_request(::msg::DeletePGRequest* delete_pg_request);

  // .msg.ApplyIDRequest apply_id_request = 6;
  bool has_apply_id_request() const;
  void clear_apply_id_request();
  static const int kApplyIdRequestFieldNumber = 6;
  private:
  const ::msg::ApplyIDRequest& _internal_apply_id_request() const;
  public:
  const ::msg::ApplyIDRequest& apply_id_request() const;
  ::msg::ApplyIDRequest* release_apply_id_request();
  ::msg::ApplyIDRequest* mutable_apply_id_request();
  void set_allocated_apply_id_request(::msg::ApplyIDRequest* apply_id_request);

  // .msg.CreatePoolRequest create_pool_request = 7;
  bool has_create_pool_request() const;
  void clear_create_pool_request();
  static const int kCreatePoolRequestFieldNumber = 7;
  private:
  const ::msg::CreatePoolRequest& _internal_create_pool_request() const;
  public:
  const ::msg::CreatePoolRequest& create_pool_request() const;
  ::msg::CreatePoolRequest* release_create_pool_request();
  ::msg::CreatePoolRequest* mutable_create_pool_request();
  void set_allocated_create_pool_request(::msg::CreatePoolRequest* create_pool_request);

  void clear_union();
  UnionCase union_case() const;
  // @@protoc_insertion_point(class_scope:msg.Request)
 private:
  void set_has_boot_request();
  void set_has_stop_request();
  void set_has_heartbeat_request();
  void set_has_create_pg_request();
  void set_has_delete_pg_request();
  void set_has_apply_id_request();
  void set_has_create_pool_request();

  inline bool has_union() const;
  inline void clear_has_union();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union UnionUnion {
    UnionUnion() {}
    ::msg::BootRequest* boot_request_;
    ::msg::StopRequest* stop_request_;
    ::msg::HeartbeatRequest* heartbeat_request_;
    ::msg::CreatePGRequest* create_pg_request_;
    ::msg::DeletePGRequest* delete_pg_request_;
    ::msg::ApplyIDRequest* apply_id_request_;
    ::msg::CreatePoolRequest* create_pool_request_;
  } union_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  enum UnionCase {
    kBootResponse = 1,
    kStopResponse = 2,
    kHeartbeatResponse = 3,
    kCreatePgResponse = 4,
    kDeletePgResponse = 5,
    kApplyIdResponse = 6,
    kCreatePoolResponse = 7,
    UNION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const final {
    return CreateMaybeMessage<Response>(NULL);
  }

  Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .msg.BootResponse boot_response = 1;
  bool has_boot_response() const;
  void clear_boot_response();
  static const int kBootResponseFieldNumber = 1;
  private:
  const ::msg::BootResponse& _internal_boot_response() const;
  public:
  const ::msg::BootResponse& boot_response() const;
  ::msg::BootResponse* release_boot_response();
  ::msg::BootResponse* mutable_boot_response();
  void set_allocated_boot_response(::msg::BootResponse* boot_response);

  // .msg.StopResponse stop_response = 2;
  bool has_stop_response() const;
  void clear_stop_response();
  static const int kStopResponseFieldNumber = 2;
  private:
  const ::msg::StopResponse& _internal_stop_response() const;
  public:
  const ::msg::StopResponse& stop_response() const;
  ::msg::StopResponse* release_stop_response();
  ::msg::StopResponse* mutable_stop_response();
  void set_allocated_stop_response(::msg::StopResponse* stop_response);

  // .msg.HeartbeatResponse heartbeat_response = 3;
  bool has_heartbeat_response() const;
  void clear_heartbeat_response();
  static const int kHeartbeatResponseFieldNumber = 3;
  private:
  const ::msg::HeartbeatResponse& _internal_heartbeat_response() const;
  public:
  const ::msg::HeartbeatResponse& heartbeat_response() const;
  ::msg::HeartbeatResponse* release_heartbeat_response();
  ::msg::HeartbeatResponse* mutable_heartbeat_response();
  void set_allocated_heartbeat_response(::msg::HeartbeatResponse* heartbeat_response);

  // .msg.CreatePGResponse create_pg_response = 4;
  bool has_create_pg_response() const;
  void clear_create_pg_response();
  static const int kCreatePgResponseFieldNumber = 4;
  private:
  const ::msg::CreatePGResponse& _internal_create_pg_response() const;
  public:
  const ::msg::CreatePGResponse& create_pg_response() const;
  ::msg::CreatePGResponse* release_create_pg_response();
  ::msg::CreatePGResponse* mutable_create_pg_response();
  void set_allocated_create_pg_response(::msg::CreatePGResponse* create_pg_response);

  // .msg.DeletePGResponse delete_pg_response = 5;
  bool has_delete_pg_response() const;
  void clear_delete_pg_response();
  static const int kDeletePgResponseFieldNumber = 5;
  private:
  const ::msg::DeletePGResponse& _internal_delete_pg_response() const;
  public:
  const ::msg::DeletePGResponse& delete_pg_response() const;
  ::msg::DeletePGResponse* release_delete_pg_response();
  ::msg::DeletePGResponse* mutable_delete_pg_response();
  void set_allocated_delete_pg_response(::msg::DeletePGResponse* delete_pg_response);

  // .msg.ApplyIDResponse apply_id_response = 6;
  bool has_apply_id_response() const;
  void clear_apply_id_response();
  static const int kApplyIdResponseFieldNumber = 6;
  private:
  const ::msg::ApplyIDResponse& _internal_apply_id_response() const;
  public:
  const ::msg::ApplyIDResponse& apply_id_response() const;
  ::msg::ApplyIDResponse* release_apply_id_response();
  ::msg::ApplyIDResponse* mutable_apply_id_response();
  void set_allocated_apply_id_response(::msg::ApplyIDResponse* apply_id_response);

  // .msg.CreatePoolResponse create_pool_response = 7;
  bool has_create_pool_response() const;
  void clear_create_pool_response();
  static const int kCreatePoolResponseFieldNumber = 7;
  private:
  const ::msg::CreatePoolResponse& _internal_create_pool_response() const;
  public:
  const ::msg::CreatePoolResponse& create_pool_response() const;
  ::msg::CreatePoolResponse* release_create_pool_response();
  ::msg::CreatePoolResponse* mutable_create_pool_response();
  void set_allocated_create_pool_response(::msg::CreatePoolResponse* create_pool_response);

  void clear_union();
  UnionCase union_case() const;
  // @@protoc_insertion_point(class_scope:msg.Response)
 private:
  void set_has_boot_response();
  void set_has_stop_response();
  void set_has_heartbeat_response();
  void set_has_create_pg_response();
  void set_has_delete_pg_response();
  void set_has_apply_id_response();
  void set_has_create_pool_response();

  inline bool has_union() const;
  inline void clear_has_union();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union UnionUnion {
    UnionUnion() {}
    ::msg::BootResponse* boot_response_;
    ::msg::StopResponse* stop_response_;
    ::msg::HeartbeatResponse* heartbeat_response_;
    ::msg::CreatePGResponse* create_pg_response_;
    ::msg::DeletePGResponse* delete_pg_response_;
    ::msg::ApplyIDResponse* apply_id_response_;
    ::msg::CreatePoolResponse* create_pool_response_;
  } union_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_msg_2fmessages_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreatePoolRequest

// string name = 1;
inline void CreatePoolRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreatePoolRequest::name() const {
  // @@protoc_insertion_point(field_get:msg.CreatePoolRequest.name)
  return name_.GetNoArena();
}
inline void CreatePoolRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.CreatePoolRequest.name)
}
#if LANG_CXX11
inline void CreatePoolRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.CreatePoolRequest.name)
}
#endif
inline void CreatePoolRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.CreatePoolRequest.name)
}
inline void CreatePoolRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.CreatePoolRequest.name)
}
inline ::std::string* CreatePoolRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:msg.CreatePoolRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreatePoolRequest::release_name() {
  // @@protoc_insertion_point(field_release:msg.CreatePoolRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePoolRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg.CreatePoolRequest.name)
}

// int32 pgsize = 2;
inline void CreatePoolRequest::clear_pgsize() {
  pgsize_ = 0;
}
inline ::google::protobuf::int32 CreatePoolRequest::pgsize() const {
  // @@protoc_insertion_point(field_get:msg.CreatePoolRequest.pgsize)
  return pgsize_;
}
inline void CreatePoolRequest::set_pgsize(::google::protobuf::int32 value) {
  
  pgsize_ = value;
  // @@protoc_insertion_point(field_set:msg.CreatePoolRequest.pgsize)
}

// int32 pgcount = 3;
inline void CreatePoolRequest::clear_pgcount() {
  pgcount_ = 0;
}
inline ::google::protobuf::int32 CreatePoolRequest::pgcount() const {
  // @@protoc_insertion_point(field_get:msg.CreatePoolRequest.pgcount)
  return pgcount_;
}
inline void CreatePoolRequest::set_pgcount(::google::protobuf::int32 value) {
  
  pgcount_ = value;
  // @@protoc_insertion_point(field_set:msg.CreatePoolRequest.pgcount)
}

// string failuredomain = 4;
inline void CreatePoolRequest::clear_failuredomain() {
  failuredomain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreatePoolRequest::failuredomain() const {
  // @@protoc_insertion_point(field_get:msg.CreatePoolRequest.failuredomain)
  return failuredomain_.GetNoArena();
}
inline void CreatePoolRequest::set_failuredomain(const ::std::string& value) {
  
  failuredomain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.CreatePoolRequest.failuredomain)
}
#if LANG_CXX11
inline void CreatePoolRequest::set_failuredomain(::std::string&& value) {
  
  failuredomain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.CreatePoolRequest.failuredomain)
}
#endif
inline void CreatePoolRequest::set_failuredomain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  failuredomain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.CreatePoolRequest.failuredomain)
}
inline void CreatePoolRequest::set_failuredomain(const char* value, size_t size) {
  
  failuredomain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.CreatePoolRequest.failuredomain)
}
inline ::std::string* CreatePoolRequest::mutable_failuredomain() {
  
  // @@protoc_insertion_point(field_mutable:msg.CreatePoolRequest.failuredomain)
  return failuredomain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreatePoolRequest::release_failuredomain() {
  // @@protoc_insertion_point(field_release:msg.CreatePoolRequest.failuredomain)
  
  return failuredomain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePoolRequest::set_allocated_failuredomain(::std::string* failuredomain) {
  if (failuredomain != NULL) {
    
  } else {
    
  }
  failuredomain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), failuredomain);
  // @@protoc_insertion_point(field_set_allocated:msg.CreatePoolRequest.failuredomain)
}

// string root = 5;
inline void CreatePoolRequest::clear_root() {
  root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreatePoolRequest::root() const {
  // @@protoc_insertion_point(field_get:msg.CreatePoolRequest.root)
  return root_.GetNoArena();
}
inline void CreatePoolRequest::set_root(const ::std::string& value) {
  
  root_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.CreatePoolRequest.root)
}
#if LANG_CXX11
inline void CreatePoolRequest::set_root(::std::string&& value) {
  
  root_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.CreatePoolRequest.root)
}
#endif
inline void CreatePoolRequest::set_root(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  root_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.CreatePoolRequest.root)
}
inline void CreatePoolRequest::set_root(const char* value, size_t size) {
  
  root_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.CreatePoolRequest.root)
}
inline ::std::string* CreatePoolRequest::mutable_root() {
  
  // @@protoc_insertion_point(field_mutable:msg.CreatePoolRequest.root)
  return root_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreatePoolRequest::release_root() {
  // @@protoc_insertion_point(field_release:msg.CreatePoolRequest.root)
  
  return root_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePoolRequest::set_allocated_root(::std::string* root) {
  if (root != NULL) {
    
  } else {
    
  }
  root_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), root);
  // @@protoc_insertion_point(field_set_allocated:msg.CreatePoolRequest.root)
}

// -------------------------------------------------------------------

// CreatePoolResponse

// bool ok = 1;
inline void CreatePoolResponse::clear_ok() {
  ok_ = false;
}
inline bool CreatePoolResponse::ok() const {
  // @@protoc_insertion_point(field_get:msg.CreatePoolResponse.ok)
  return ok_;
}
inline void CreatePoolResponse::set_ok(bool value) {
  
  ok_ = value;
  // @@protoc_insertion_point(field_set:msg.CreatePoolResponse.ok)
}

// int32 poolid = 2;
inline void CreatePoolResponse::clear_poolid() {
  poolid_ = 0;
}
inline ::google::protobuf::int32 CreatePoolResponse::poolid() const {
  // @@protoc_insertion_point(field_get:msg.CreatePoolResponse.poolid)
  return poolid_;
}
inline void CreatePoolResponse::set_poolid(::google::protobuf::int32 value) {
  
  poolid_ = value;
  // @@protoc_insertion_point(field_set:msg.CreatePoolResponse.poolid)
}

// -------------------------------------------------------------------

// DeletePoolRequest

// string name = 1;
inline void DeletePoolRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeletePoolRequest::name() const {
  // @@protoc_insertion_point(field_get:msg.DeletePoolRequest.name)
  return name_.GetNoArena();
}
inline void DeletePoolRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.DeletePoolRequest.name)
}
#if LANG_CXX11
inline void DeletePoolRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.DeletePoolRequest.name)
}
#endif
inline void DeletePoolRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.DeletePoolRequest.name)
}
inline void DeletePoolRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.DeletePoolRequest.name)
}
inline ::std::string* DeletePoolRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:msg.DeletePoolRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeletePoolRequest::release_name() {
  // @@protoc_insertion_point(field_release:msg.DeletePoolRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeletePoolRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msg.DeletePoolRequest.name)
}

// -------------------------------------------------------------------

// DeletePoolResponse

// bool ok = 1;
inline void DeletePoolResponse::clear_ok() {
  ok_ = false;
}
inline bool DeletePoolResponse::ok() const {
  // @@protoc_insertion_point(field_get:msg.DeletePoolResponse.ok)
  return ok_;
}
inline void DeletePoolResponse::set_ok(bool value) {
  
  ok_ = value;
  // @@protoc_insertion_point(field_set:msg.DeletePoolResponse.ok)
}

// -------------------------------------------------------------------

// ApplyIDRequest

// string uuid = 1;
inline void ApplyIDRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApplyIDRequest::uuid() const {
  // @@protoc_insertion_point(field_get:msg.ApplyIDRequest.uuid)
  return uuid_.GetNoArena();
}
inline void ApplyIDRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.ApplyIDRequest.uuid)
}
#if LANG_CXX11
inline void ApplyIDRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.ApplyIDRequest.uuid)
}
#endif
inline void ApplyIDRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.ApplyIDRequest.uuid)
}
inline void ApplyIDRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.ApplyIDRequest.uuid)
}
inline ::std::string* ApplyIDRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:msg.ApplyIDRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApplyIDRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:msg.ApplyIDRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApplyIDRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:msg.ApplyIDRequest.uuid)
}

// -------------------------------------------------------------------

// ApplyIDResponse

// string uuid = 1;
inline void ApplyIDResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ApplyIDResponse::uuid() const {
  // @@protoc_insertion_point(field_get:msg.ApplyIDResponse.uuid)
  return uuid_.GetNoArena();
}
inline void ApplyIDResponse::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.ApplyIDResponse.uuid)
}
#if LANG_CXX11
inline void ApplyIDResponse::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.ApplyIDResponse.uuid)
}
#endif
inline void ApplyIDResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.ApplyIDResponse.uuid)
}
inline void ApplyIDResponse::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.ApplyIDResponse.uuid)
}
inline ::std::string* ApplyIDResponse::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:msg.ApplyIDResponse.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ApplyIDResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:msg.ApplyIDResponse.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ApplyIDResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:msg.ApplyIDResponse.uuid)
}

// int32 id = 2;
inline void ApplyIDResponse::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 ApplyIDResponse::id() const {
  // @@protoc_insertion_point(field_get:msg.ApplyIDResponse.id)
  return id_;
}
inline void ApplyIDResponse::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.ApplyIDResponse.id)
}

// -------------------------------------------------------------------

// BootRequest

// int32 osd_id = 1;
inline void BootRequest::clear_osd_id() {
  osd_id_ = 0;
}
inline ::google::protobuf::int32 BootRequest::osd_id() const {
  // @@protoc_insertion_point(field_get:msg.BootRequest.osd_id)
  return osd_id_;
}
inline void BootRequest::set_osd_id(::google::protobuf::int32 value) {
  
  osd_id_ = value;
  // @@protoc_insertion_point(field_set:msg.BootRequest.osd_id)
}

// string uuid = 2;
inline void BootRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BootRequest::uuid() const {
  // @@protoc_insertion_point(field_get:msg.BootRequest.uuid)
  return uuid_.GetNoArena();
}
inline void BootRequest::set_uuid(const ::std::string& value) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.BootRequest.uuid)
}
#if LANG_CXX11
inline void BootRequest::set_uuid(::std::string&& value) {
  
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.BootRequest.uuid)
}
#endif
inline void BootRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.BootRequest.uuid)
}
inline void BootRequest::set_uuid(const char* value, size_t size) {
  
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.BootRequest.uuid)
}
inline ::std::string* BootRequest::mutable_uuid() {
  
  // @@protoc_insertion_point(field_mutable:msg.BootRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BootRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:msg.BootRequest.uuid)
  
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BootRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    
  } else {
    
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:msg.BootRequest.uuid)
}

// int64 size = 3;
inline void BootRequest::clear_size() {
  size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BootRequest::size() const {
  // @@protoc_insertion_point(field_get:msg.BootRequest.size)
  return size_;
}
inline void BootRequest::set_size(::google::protobuf::int64 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:msg.BootRequest.size)
}

// uint32 port = 4;
inline void BootRequest::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 BootRequest::port() const {
  // @@protoc_insertion_point(field_get:msg.BootRequest.port)
  return port_;
}
inline void BootRequest::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:msg.BootRequest.port)
}

// string address = 5;
inline void BootRequest::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BootRequest::address() const {
  // @@protoc_insertion_point(field_get:msg.BootRequest.address)
  return address_.GetNoArena();
}
inline void BootRequest::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.BootRequest.address)
}
#if LANG_CXX11
inline void BootRequest::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.BootRequest.address)
}
#endif
inline void BootRequest::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.BootRequest.address)
}
inline void BootRequest::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.BootRequest.address)
}
inline ::std::string* BootRequest::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:msg.BootRequest.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BootRequest::release_address() {
  // @@protoc_insertion_point(field_release:msg.BootRequest.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BootRequest::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:msg.BootRequest.address)
}

// string host = 6;
inline void BootRequest::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BootRequest::host() const {
  // @@protoc_insertion_point(field_get:msg.BootRequest.host)
  return host_.GetNoArena();
}
inline void BootRequest::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msg.BootRequest.host)
}
#if LANG_CXX11
inline void BootRequest::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msg.BootRequest.host)
}
#endif
inline void BootRequest::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msg.BootRequest.host)
}
inline void BootRequest::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msg.BootRequest.host)
}
inline ::std::string* BootRequest::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:msg.BootRequest.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BootRequest::release_host() {
  // @@protoc_insertion_point(field_release:msg.BootRequest.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BootRequest::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:msg.BootRequest.host)
}

// -------------------------------------------------------------------

// BootResponse

// bool ok = 1;
inline void BootResponse::clear_ok() {
  ok_ = false;
}
inline bool BootResponse::ok() const {
  // @@protoc_insertion_point(field_get:msg.BootResponse.ok)
  return ok_;
}
inline void BootResponse::set_ok(bool value) {
  
  ok_ = value;
  // @@protoc_insertion_point(field_set:msg.BootResponse.ok)
}

// -------------------------------------------------------------------

// StopRequest

// int32 id = 1;
inline void StopRequest::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 StopRequest::id() const {
  // @@protoc_insertion_point(field_get:msg.StopRequest.id)
  return id_;
}
inline void StopRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.StopRequest.id)
}

// -------------------------------------------------------------------

// StopResponse

// bool ok = 1;
inline void StopResponse::clear_ok() {
  ok_ = false;
}
inline bool StopResponse::ok() const {
  // @@protoc_insertion_point(field_get:msg.StopResponse.ok)
  return ok_;
}
inline void StopResponse::set_ok(bool value) {
  
  ok_ = value;
  // @@protoc_insertion_point(field_set:msg.StopResponse.ok)
}

// -------------------------------------------------------------------

// HeartbeatRequest

// int32 id = 1;
inline void HeartbeatRequest::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 HeartbeatRequest::id() const {
  // @@protoc_insertion_point(field_get:msg.HeartbeatRequest.id)
  return id_;
}
inline void HeartbeatRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.HeartbeatRequest.id)
}

// -------------------------------------------------------------------

// HeartbeatResponse

// bool ok = 1;
inline void HeartbeatResponse::clear_ok() {
  ok_ = false;
}
inline bool HeartbeatResponse::ok() const {
  // @@protoc_insertion_point(field_get:msg.HeartbeatResponse.ok)
  return ok_;
}
inline void HeartbeatResponse::set_ok(bool value) {
  
  ok_ = value;
  // @@protoc_insertion_point(field_set:msg.HeartbeatResponse.ok)
}

// -------------------------------------------------------------------

// CreatePGRequest

// int32 id = 1;
inline void CreatePGRequest::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 CreatePGRequest::id() const {
  // @@protoc_insertion_point(field_get:msg.CreatePGRequest.id)
  return id_;
}
inline void CreatePGRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.CreatePGRequest.id)
}

// int32 pgid = 2;
inline void CreatePGRequest::clear_pgid() {
  pgid_ = 0;
}
inline ::google::protobuf::int32 CreatePGRequest::pgid() const {
  // @@protoc_insertion_point(field_get:msg.CreatePGRequest.pgid)
  return pgid_;
}
inline void CreatePGRequest::set_pgid(::google::protobuf::int32 value) {
  
  pgid_ = value;
  // @@protoc_insertion_point(field_set:msg.CreatePGRequest.pgid)
}

// int32 other_osd1 = 3;
inline void CreatePGRequest::clear_other_osd1() {
  other_osd1_ = 0;
}
inline ::google::protobuf::int32 CreatePGRequest::other_osd1() const {
  // @@protoc_insertion_point(field_get:msg.CreatePGRequest.other_osd1)
  return other_osd1_;
}
inline void CreatePGRequest::set_other_osd1(::google::protobuf::int32 value) {
  
  other_osd1_ = value;
  // @@protoc_insertion_point(field_set:msg.CreatePGRequest.other_osd1)
}

// int32 other_osd2 = 4;
inline void CreatePGRequest::clear_other_osd2() {
  other_osd2_ = 0;
}
inline ::google::protobuf::int32 CreatePGRequest::other_osd2() const {
  // @@protoc_insertion_point(field_get:msg.CreatePGRequest.other_osd2)
  return other_osd2_;
}
inline void CreatePGRequest::set_other_osd2(::google::protobuf::int32 value) {
  
  other_osd2_ = value;
  // @@protoc_insertion_point(field_set:msg.CreatePGRequest.other_osd2)
}

// -------------------------------------------------------------------

// CreatePGResponse

// bool ok = 1;
inline void CreatePGResponse::clear_ok() {
  ok_ = false;
}
inline bool CreatePGResponse::ok() const {
  // @@protoc_insertion_point(field_get:msg.CreatePGResponse.ok)
  return ok_;
}
inline void CreatePGResponse::set_ok(bool value) {
  
  ok_ = value;
  // @@protoc_insertion_point(field_set:msg.CreatePGResponse.ok)
}

// -------------------------------------------------------------------

// DeletePGRequest

// int32 id = 1;
inline void DeletePGRequest::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 DeletePGRequest::id() const {
  // @@protoc_insertion_point(field_get:msg.DeletePGRequest.id)
  return id_;
}
inline void DeletePGRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.DeletePGRequest.id)
}

// int32 pgid = 2;
inline void DeletePGRequest::clear_pgid() {
  pgid_ = 0;
}
inline ::google::protobuf::int32 DeletePGRequest::pgid() const {
  // @@protoc_insertion_point(field_get:msg.DeletePGRequest.pgid)
  return pgid_;
}
inline void DeletePGRequest::set_pgid(::google::protobuf::int32 value) {
  
  pgid_ = value;
  // @@protoc_insertion_point(field_set:msg.DeletePGRequest.pgid)
}

// -------------------------------------------------------------------

// DeletePGResponse

// bool ok = 1;
inline void DeletePGResponse::clear_ok() {
  ok_ = false;
}
inline bool DeletePGResponse::ok() const {
  // @@protoc_insertion_point(field_get:msg.DeletePGResponse.ok)
  return ok_;
}
inline void DeletePGResponse::set_ok(bool value) {
  
  ok_ = value;
  // @@protoc_insertion_point(field_set:msg.DeletePGResponse.ok)
}

// -------------------------------------------------------------------

// Request

// .msg.BootRequest boot_request = 1;
inline bool Request::has_boot_request() const {
  return union_case() == kBootRequest;
}
inline void Request::set_has_boot_request() {
  _oneof_case_[0] = kBootRequest;
}
inline void Request::clear_boot_request() {
  if (has_boot_request()) {
    delete union_.boot_request_;
    clear_has_union();
  }
}
inline const ::msg::BootRequest& Request::_internal_boot_request() const {
  return *union_.boot_request_;
}
inline ::msg::BootRequest* Request::release_boot_request() {
  // @@protoc_insertion_point(field_release:msg.Request.boot_request)
  if (has_boot_request()) {
    clear_has_union();
      ::msg::BootRequest* temp = union_.boot_request_;
    union_.boot_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::msg::BootRequest& Request::boot_request() const {
  // @@protoc_insertion_point(field_get:msg.Request.boot_request)
  return has_boot_request()
      ? *union_.boot_request_
      : *reinterpret_cast< ::msg::BootRequest*>(&::msg::_BootRequest_default_instance_);
}
inline ::msg::BootRequest* Request::mutable_boot_request() {
  if (!has_boot_request()) {
    clear_union();
    set_has_boot_request();
    union_.boot_request_ = CreateMaybeMessage< ::msg::BootRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:msg.Request.boot_request)
  return union_.boot_request_;
}

// .msg.StopRequest stop_request = 2;
inline bool Request::has_stop_request() const {
  return union_case() == kStopRequest;
}
inline void Request::set_has_stop_request() {
  _oneof_case_[0] = kStopRequest;
}
inline void Request::clear_stop_request() {
  if (has_stop_request()) {
    delete union_.stop_request_;
    clear_has_union();
  }
}
inline const ::msg::StopRequest& Request::_internal_stop_request() const {
  return *union_.stop_request_;
}
inline ::msg::StopRequest* Request::release_stop_request() {
  // @@protoc_insertion_point(field_release:msg.Request.stop_request)
  if (has_stop_request()) {
    clear_has_union();
      ::msg::StopRequest* temp = union_.stop_request_;
    union_.stop_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::msg::StopRequest& Request::stop_request() const {
  // @@protoc_insertion_point(field_get:msg.Request.stop_request)
  return has_stop_request()
      ? *union_.stop_request_
      : *reinterpret_cast< ::msg::StopRequest*>(&::msg::_StopRequest_default_instance_);
}
inline ::msg::StopRequest* Request::mutable_stop_request() {
  if (!has_stop_request()) {
    clear_union();
    set_has_stop_request();
    union_.stop_request_ = CreateMaybeMessage< ::msg::StopRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:msg.Request.stop_request)
  return union_.stop_request_;
}

// .msg.HeartbeatRequest heartbeat_request = 3;
inline bool Request::has_heartbeat_request() const {
  return union_case() == kHeartbeatRequest;
}
inline void Request::set_has_heartbeat_request() {
  _oneof_case_[0] = kHeartbeatRequest;
}
inline void Request::clear_heartbeat_request() {
  if (has_heartbeat_request()) {
    delete union_.heartbeat_request_;
    clear_has_union();
  }
}
inline const ::msg::HeartbeatRequest& Request::_internal_heartbeat_request() const {
  return *union_.heartbeat_request_;
}
inline ::msg::HeartbeatRequest* Request::release_heartbeat_request() {
  // @@protoc_insertion_point(field_release:msg.Request.heartbeat_request)
  if (has_heartbeat_request()) {
    clear_has_union();
      ::msg::HeartbeatRequest* temp = union_.heartbeat_request_;
    union_.heartbeat_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::msg::HeartbeatRequest& Request::heartbeat_request() const {
  // @@protoc_insertion_point(field_get:msg.Request.heartbeat_request)
  return has_heartbeat_request()
      ? *union_.heartbeat_request_
      : *reinterpret_cast< ::msg::HeartbeatRequest*>(&::msg::_HeartbeatRequest_default_instance_);
}
inline ::msg::HeartbeatRequest* Request::mutable_heartbeat_request() {
  if (!has_heartbeat_request()) {
    clear_union();
    set_has_heartbeat_request();
    union_.heartbeat_request_ = CreateMaybeMessage< ::msg::HeartbeatRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:msg.Request.heartbeat_request)
  return union_.heartbeat_request_;
}

// .msg.CreatePGRequest create_pg_request = 4;
inline bool Request::has_create_pg_request() const {
  return union_case() == kCreatePgRequest;
}
inline void Request::set_has_create_pg_request() {
  _oneof_case_[0] = kCreatePgRequest;
}
inline void Request::clear_create_pg_request() {
  if (has_create_pg_request()) {
    delete union_.create_pg_request_;
    clear_has_union();
  }
}
inline const ::msg::CreatePGRequest& Request::_internal_create_pg_request() const {
  return *union_.create_pg_request_;
}
inline ::msg::CreatePGRequest* Request::release_create_pg_request() {
  // @@protoc_insertion_point(field_release:msg.Request.create_pg_request)
  if (has_create_pg_request()) {
    clear_has_union();
      ::msg::CreatePGRequest* temp = union_.create_pg_request_;
    union_.create_pg_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::msg::CreatePGRequest& Request::create_pg_request() const {
  // @@protoc_insertion_point(field_get:msg.Request.create_pg_request)
  return has_create_pg_request()
      ? *union_.create_pg_request_
      : *reinterpret_cast< ::msg::CreatePGRequest*>(&::msg::_CreatePGRequest_default_instance_);
}
inline ::msg::CreatePGRequest* Request::mutable_create_pg_request() {
  if (!has_create_pg_request()) {
    clear_union();
    set_has_create_pg_request();
    union_.create_pg_request_ = CreateMaybeMessage< ::msg::CreatePGRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:msg.Request.create_pg_request)
  return union_.create_pg_request_;
}

// .msg.DeletePGRequest delete_pg_request = 5;
inline bool Request::has_delete_pg_request() const {
  return union_case() == kDeletePgRequest;
}
inline void Request::set_has_delete_pg_request() {
  _oneof_case_[0] = kDeletePgRequest;
}
inline void Request::clear_delete_pg_request() {
  if (has_delete_pg_request()) {
    delete union_.delete_pg_request_;
    clear_has_union();
  }
}
inline const ::msg::DeletePGRequest& Request::_internal_delete_pg_request() const {
  return *union_.delete_pg_request_;
}
inline ::msg::DeletePGRequest* Request::release_delete_pg_request() {
  // @@protoc_insertion_point(field_release:msg.Request.delete_pg_request)
  if (has_delete_pg_request()) {
    clear_has_union();
      ::msg::DeletePGRequest* temp = union_.delete_pg_request_;
    union_.delete_pg_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::msg::DeletePGRequest& Request::delete_pg_request() const {
  // @@protoc_insertion_point(field_get:msg.Request.delete_pg_request)
  return has_delete_pg_request()
      ? *union_.delete_pg_request_
      : *reinterpret_cast< ::msg::DeletePGRequest*>(&::msg::_DeletePGRequest_default_instance_);
}
inline ::msg::DeletePGRequest* Request::mutable_delete_pg_request() {
  if (!has_delete_pg_request()) {
    clear_union();
    set_has_delete_pg_request();
    union_.delete_pg_request_ = CreateMaybeMessage< ::msg::DeletePGRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:msg.Request.delete_pg_request)
  return union_.delete_pg_request_;
}

// .msg.ApplyIDRequest apply_id_request = 6;
inline bool Request::has_apply_id_request() const {
  return union_case() == kApplyIdRequest;
}
inline void Request::set_has_apply_id_request() {
  _oneof_case_[0] = kApplyIdRequest;
}
inline void Request::clear_apply_id_request() {
  if (has_apply_id_request()) {
    delete union_.apply_id_request_;
    clear_has_union();
  }
}
inline const ::msg::ApplyIDRequest& Request::_internal_apply_id_request() const {
  return *union_.apply_id_request_;
}
inline ::msg::ApplyIDRequest* Request::release_apply_id_request() {
  // @@protoc_insertion_point(field_release:msg.Request.apply_id_request)
  if (has_apply_id_request()) {
    clear_has_union();
      ::msg::ApplyIDRequest* temp = union_.apply_id_request_;
    union_.apply_id_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::msg::ApplyIDRequest& Request::apply_id_request() const {
  // @@protoc_insertion_point(field_get:msg.Request.apply_id_request)
  return has_apply_id_request()
      ? *union_.apply_id_request_
      : *reinterpret_cast< ::msg::ApplyIDRequest*>(&::msg::_ApplyIDRequest_default_instance_);
}
inline ::msg::ApplyIDRequest* Request::mutable_apply_id_request() {
  if (!has_apply_id_request()) {
    clear_union();
    set_has_apply_id_request();
    union_.apply_id_request_ = CreateMaybeMessage< ::msg::ApplyIDRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:msg.Request.apply_id_request)
  return union_.apply_id_request_;
}

// .msg.CreatePoolRequest create_pool_request = 7;
inline bool Request::has_create_pool_request() const {
  return union_case() == kCreatePoolRequest;
}
inline void Request::set_has_create_pool_request() {
  _oneof_case_[0] = kCreatePoolRequest;
}
inline void Request::clear_create_pool_request() {
  if (has_create_pool_request()) {
    delete union_.create_pool_request_;
    clear_has_union();
  }
}
inline const ::msg::CreatePoolRequest& Request::_internal_create_pool_request() const {
  return *union_.create_pool_request_;
}
inline ::msg::CreatePoolRequest* Request::release_create_pool_request() {
  // @@protoc_insertion_point(field_release:msg.Request.create_pool_request)
  if (has_create_pool_request()) {
    clear_has_union();
      ::msg::CreatePoolRequest* temp = union_.create_pool_request_;
    union_.create_pool_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::msg::CreatePoolRequest& Request::create_pool_request() const {
  // @@protoc_insertion_point(field_get:msg.Request.create_pool_request)
  return has_create_pool_request()
      ? *union_.create_pool_request_
      : *reinterpret_cast< ::msg::CreatePoolRequest*>(&::msg::_CreatePoolRequest_default_instance_);
}
inline ::msg::CreatePoolRequest* Request::mutable_create_pool_request() {
  if (!has_create_pool_request()) {
    clear_union();
    set_has_create_pool_request();
    union_.create_pool_request_ = CreateMaybeMessage< ::msg::CreatePoolRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:msg.Request.create_pool_request)
  return union_.create_pool_request_;
}

inline bool Request::has_union() const {
  return union_case() != UNION_NOT_SET;
}
inline void Request::clear_has_union() {
  _oneof_case_[0] = UNION_NOT_SET;
}
inline Request::UnionCase Request::union_case() const {
  return Request::UnionCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Response

// .msg.BootResponse boot_response = 1;
inline bool Response::has_boot_response() const {
  return union_case() == kBootResponse;
}
inline void Response::set_has_boot_response() {
  _oneof_case_[0] = kBootResponse;
}
inline void Response::clear_boot_response() {
  if (has_boot_response()) {
    delete union_.boot_response_;
    clear_has_union();
  }
}
inline const ::msg::BootResponse& Response::_internal_boot_response() const {
  return *union_.boot_response_;
}
inline ::msg::BootResponse* Response::release_boot_response() {
  // @@protoc_insertion_point(field_release:msg.Response.boot_response)
  if (has_boot_response()) {
    clear_has_union();
      ::msg::BootResponse* temp = union_.boot_response_;
    union_.boot_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::msg::BootResponse& Response::boot_response() const {
  // @@protoc_insertion_point(field_get:msg.Response.boot_response)
  return has_boot_response()
      ? *union_.boot_response_
      : *reinterpret_cast< ::msg::BootResponse*>(&::msg::_BootResponse_default_instance_);
}
inline ::msg::BootResponse* Response::mutable_boot_response() {
  if (!has_boot_response()) {
    clear_union();
    set_has_boot_response();
    union_.boot_response_ = CreateMaybeMessage< ::msg::BootResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:msg.Response.boot_response)
  return union_.boot_response_;
}

// .msg.StopResponse stop_response = 2;
inline bool Response::has_stop_response() const {
  return union_case() == kStopResponse;
}
inline void Response::set_has_stop_response() {
  _oneof_case_[0] = kStopResponse;
}
inline void Response::clear_stop_response() {
  if (has_stop_response()) {
    delete union_.stop_response_;
    clear_has_union();
  }
}
inline const ::msg::StopResponse& Response::_internal_stop_response() const {
  return *union_.stop_response_;
}
inline ::msg::StopResponse* Response::release_stop_response() {
  // @@protoc_insertion_point(field_release:msg.Response.stop_response)
  if (has_stop_response()) {
    clear_has_union();
      ::msg::StopResponse* temp = union_.stop_response_;
    union_.stop_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::msg::StopResponse& Response::stop_response() const {
  // @@protoc_insertion_point(field_get:msg.Response.stop_response)
  return has_stop_response()
      ? *union_.stop_response_
      : *reinterpret_cast< ::msg::StopResponse*>(&::msg::_StopResponse_default_instance_);
}
inline ::msg::StopResponse* Response::mutable_stop_response() {
  if (!has_stop_response()) {
    clear_union();
    set_has_stop_response();
    union_.stop_response_ = CreateMaybeMessage< ::msg::StopResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:msg.Response.stop_response)
  return union_.stop_response_;
}

// .msg.HeartbeatResponse heartbeat_response = 3;
inline bool Response::has_heartbeat_response() const {
  return union_case() == kHeartbeatResponse;
}
inline void Response::set_has_heartbeat_response() {
  _oneof_case_[0] = kHeartbeatResponse;
}
inline void Response::clear_heartbeat_response() {
  if (has_heartbeat_response()) {
    delete union_.heartbeat_response_;
    clear_has_union();
  }
}
inline const ::msg::HeartbeatResponse& Response::_internal_heartbeat_response() const {
  return *union_.heartbeat_response_;
}
inline ::msg::HeartbeatResponse* Response::release_heartbeat_response() {
  // @@protoc_insertion_point(field_release:msg.Response.heartbeat_response)
  if (has_heartbeat_response()) {
    clear_has_union();
      ::msg::HeartbeatResponse* temp = union_.heartbeat_response_;
    union_.heartbeat_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::msg::HeartbeatResponse& Response::heartbeat_response() const {
  // @@protoc_insertion_point(field_get:msg.Response.heartbeat_response)
  return has_heartbeat_response()
      ? *union_.heartbeat_response_
      : *reinterpret_cast< ::msg::HeartbeatResponse*>(&::msg::_HeartbeatResponse_default_instance_);
}
inline ::msg::HeartbeatResponse* Response::mutable_heartbeat_response() {
  if (!has_heartbeat_response()) {
    clear_union();
    set_has_heartbeat_response();
    union_.heartbeat_response_ = CreateMaybeMessage< ::msg::HeartbeatResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:msg.Response.heartbeat_response)
  return union_.heartbeat_response_;
}

// .msg.CreatePGResponse create_pg_response = 4;
inline bool Response::has_create_pg_response() const {
  return union_case() == kCreatePgResponse;
}
inline void Response::set_has_create_pg_response() {
  _oneof_case_[0] = kCreatePgResponse;
}
inline void Response::clear_create_pg_response() {
  if (has_create_pg_response()) {
    delete union_.create_pg_response_;
    clear_has_union();
  }
}
inline const ::msg::CreatePGResponse& Response::_internal_create_pg_response() const {
  return *union_.create_pg_response_;
}
inline ::msg::CreatePGResponse* Response::release_create_pg_response() {
  // @@protoc_insertion_point(field_release:msg.Response.create_pg_response)
  if (has_create_pg_response()) {
    clear_has_union();
      ::msg::CreatePGResponse* temp = union_.create_pg_response_;
    union_.create_pg_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::msg::CreatePGResponse& Response::create_pg_response() const {
  // @@protoc_insertion_point(field_get:msg.Response.create_pg_response)
  return has_create_pg_response()
      ? *union_.create_pg_response_
      : *reinterpret_cast< ::msg::CreatePGResponse*>(&::msg::_CreatePGResponse_default_instance_);
}
inline ::msg::CreatePGResponse* Response::mutable_create_pg_response() {
  if (!has_create_pg_response()) {
    clear_union();
    set_has_create_pg_response();
    union_.create_pg_response_ = CreateMaybeMessage< ::msg::CreatePGResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:msg.Response.create_pg_response)
  return union_.create_pg_response_;
}

// .msg.DeletePGResponse delete_pg_response = 5;
inline bool Response::has_delete_pg_response() const {
  return union_case() == kDeletePgResponse;
}
inline void Response::set_has_delete_pg_response() {
  _oneof_case_[0] = kDeletePgResponse;
}
inline void Response::clear_delete_pg_response() {
  if (has_delete_pg_response()) {
    delete union_.delete_pg_response_;
    clear_has_union();
  }
}
inline const ::msg::DeletePGResponse& Response::_internal_delete_pg_response() const {
  return *union_.delete_pg_response_;
}
inline ::msg::DeletePGResponse* Response::release_delete_pg_response() {
  // @@protoc_insertion_point(field_release:msg.Response.delete_pg_response)
  if (has_delete_pg_response()) {
    clear_has_union();
      ::msg::DeletePGResponse* temp = union_.delete_pg_response_;
    union_.delete_pg_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::msg::DeletePGResponse& Response::delete_pg_response() const {
  // @@protoc_insertion_point(field_get:msg.Response.delete_pg_response)
  return has_delete_pg_response()
      ? *union_.delete_pg_response_
      : *reinterpret_cast< ::msg::DeletePGResponse*>(&::msg::_DeletePGResponse_default_instance_);
}
inline ::msg::DeletePGResponse* Response::mutable_delete_pg_response() {
  if (!has_delete_pg_response()) {
    clear_union();
    set_has_delete_pg_response();
    union_.delete_pg_response_ = CreateMaybeMessage< ::msg::DeletePGResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:msg.Response.delete_pg_response)
  return union_.delete_pg_response_;
}

// .msg.ApplyIDResponse apply_id_response = 6;
inline bool Response::has_apply_id_response() const {
  return union_case() == kApplyIdResponse;
}
inline void Response::set_has_apply_id_response() {
  _oneof_case_[0] = kApplyIdResponse;
}
inline void Response::clear_apply_id_response() {
  if (has_apply_id_response()) {
    delete union_.apply_id_response_;
    clear_has_union();
  }
}
inline const ::msg::ApplyIDResponse& Response::_internal_apply_id_response() const {
  return *union_.apply_id_response_;
}
inline ::msg::ApplyIDResponse* Response::release_apply_id_response() {
  // @@protoc_insertion_point(field_release:msg.Response.apply_id_response)
  if (has_apply_id_response()) {
    clear_has_union();
      ::msg::ApplyIDResponse* temp = union_.apply_id_response_;
    union_.apply_id_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::msg::ApplyIDResponse& Response::apply_id_response() const {
  // @@protoc_insertion_point(field_get:msg.Response.apply_id_response)
  return has_apply_id_response()
      ? *union_.apply_id_response_
      : *reinterpret_cast< ::msg::ApplyIDResponse*>(&::msg::_ApplyIDResponse_default_instance_);
}
inline ::msg::ApplyIDResponse* Response::mutable_apply_id_response() {
  if (!has_apply_id_response()) {
    clear_union();
    set_has_apply_id_response();
    union_.apply_id_response_ = CreateMaybeMessage< ::msg::ApplyIDResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:msg.Response.apply_id_response)
  return union_.apply_id_response_;
}

// .msg.CreatePoolResponse create_pool_response = 7;
inline bool Response::has_create_pool_response() const {
  return union_case() == kCreatePoolResponse;
}
inline void Response::set_has_create_pool_response() {
  _oneof_case_[0] = kCreatePoolResponse;
}
inline void Response::clear_create_pool_response() {
  if (has_create_pool_response()) {
    delete union_.create_pool_response_;
    clear_has_union();
  }
}
inline const ::msg::CreatePoolResponse& Response::_internal_create_pool_response() const {
  return *union_.create_pool_response_;
}
inline ::msg::CreatePoolResponse* Response::release_create_pool_response() {
  // @@protoc_insertion_point(field_release:msg.Response.create_pool_response)
  if (has_create_pool_response()) {
    clear_has_union();
      ::msg::CreatePoolResponse* temp = union_.create_pool_response_;
    union_.create_pool_response_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::msg::CreatePoolResponse& Response::create_pool_response() const {
  // @@protoc_insertion_point(field_get:msg.Response.create_pool_response)
  return has_create_pool_response()
      ? *union_.create_pool_response_
      : *reinterpret_cast< ::msg::CreatePoolResponse*>(&::msg::_CreatePoolResponse_default_instance_);
}
inline ::msg::CreatePoolResponse* Response::mutable_create_pool_response() {
  if (!has_create_pool_response()) {
    clear_union();
    set_has_create_pool_response();
    union_.create_pool_response_ = CreateMaybeMessage< ::msg::CreatePoolResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:msg.Response.create_pool_response)
  return union_.create_pool_response_;
}

inline bool Response::has_union() const {
  return union_case() != UNION_NOT_SET;
}
inline void Response::clear_has_union() {
  _oneof_case_[0] = UNION_NOT_SET;
}
inline Response::UnionCase Response::union_case() const {
  return Response::UnionCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_msg_2fmessages_2eproto
