/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: messages.proto */

#ifndef PROTOBUF_C_messages_2eproto__INCLUDED
#define PROTOBUF_C_messages_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Msg__CreatePoolRequest Msg__CreatePoolRequest;
typedef struct Msg__CreatePoolResponse Msg__CreatePoolResponse;
typedef struct Msg__DeletePoolRequest Msg__DeletePoolRequest;
typedef struct Msg__DeletePoolResponse Msg__DeletePoolResponse;
typedef struct Msg__ApplyIDRequest Msg__ApplyIDRequest;
typedef struct Msg__ApplyIDResponse Msg__ApplyIDResponse;
typedef struct Msg__BootRequest Msg__BootRequest;
typedef struct Msg__BootResponse Msg__BootResponse;
typedef struct Msg__StopRequest Msg__StopRequest;
typedef struct Msg__StopResponse Msg__StopResponse;
typedef struct Msg__HeartbeatRequest Msg__HeartbeatRequest;
typedef struct Msg__HeartbeatResponse Msg__HeartbeatResponse;
typedef struct Msg__CreatePGRequest Msg__CreatePGRequest;
typedef struct Msg__CreatePGResponse Msg__CreatePGResponse;
typedef struct Msg__DeletePGRequest Msg__DeletePGRequest;
typedef struct Msg__DeletePGResponse Msg__DeletePGResponse;
typedef struct Msg__Request Msg__Request;
typedef struct Msg__Response Msg__Response;


/* --- enums --- */


/* --- messages --- */

struct  Msg__CreatePoolRequest
{
  ProtobufCMessage base;
  char *name;
  int32_t pgsize;
  int32_t pgcount;
  char *failuredomain;
  char *root;
};
#define MSG__CREATE_POOL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__create_pool_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Msg__CreatePoolResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean ok;
  int32_t poolid;
};
#define MSG__CREATE_POOL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__create_pool_response__descriptor) \
    , 0, 0 }


struct  Msg__DeletePoolRequest
{
  ProtobufCMessage base;
  char *name;
};
#define MSG__DELETE_POOL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__delete_pool_request__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Msg__DeletePoolResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean ok;
};
#define MSG__DELETE_POOL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__delete_pool_response__descriptor) \
    , 0 }


struct  Msg__ApplyIDRequest
{
  ProtobufCMessage base;
  char *uuid;
};
#define MSG__APPLY_IDREQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__apply_idrequest__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Msg__ApplyIDResponse
{
  ProtobufCMessage base;
  char *uuid;
  int32_t id;
};
#define MSG__APPLY_IDRESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__apply_idresponse__descriptor) \
    , (char *)protobuf_c_empty_string, 0 }


struct  Msg__BootRequest
{
  ProtobufCMessage base;
  int32_t osd_id;
  char *uuid;
  int64_t size;
  uint32_t port;
  char *address;
  char *host;
};
#define MSG__BOOT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__boot_request__descriptor) \
    , 0, (char *)protobuf_c_empty_string, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  Msg__BootResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean ok;
};
#define MSG__BOOT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__boot_response__descriptor) \
    , 0 }


struct  Msg__StopRequest
{
  ProtobufCMessage base;
  int32_t id;
};
#define MSG__STOP_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__stop_request__descriptor) \
    , 0 }


struct  Msg__StopResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean ok;
};
#define MSG__STOP_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__stop_response__descriptor) \
    , 0 }


struct  Msg__HeartbeatRequest
{
  ProtobufCMessage base;
  int32_t id;
};
#define MSG__HEARTBEAT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__heartbeat_request__descriptor) \
    , 0 }


struct  Msg__HeartbeatResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean ok;
};
#define MSG__HEARTBEAT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__heartbeat_response__descriptor) \
    , 0 }


struct  Msg__CreatePGRequest
{
  ProtobufCMessage base;
  int32_t id;
  int32_t pgid;
  int32_t other_osd1;
  int32_t other_osd2;
};
#define MSG__CREATE_PGREQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__create_pgrequest__descriptor) \
    , 0, 0, 0, 0 }


struct  Msg__CreatePGResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean ok;
};
#define MSG__CREATE_PGRESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__create_pgresponse__descriptor) \
    , 0 }


struct  Msg__DeletePGRequest
{
  ProtobufCMessage base;
  int32_t id;
  int32_t pgid;
};
#define MSG__DELETE_PGREQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__delete_pgrequest__descriptor) \
    , 0, 0 }


struct  Msg__DeletePGResponse
{
  ProtobufCMessage base;
  protobuf_c_boolean ok;
};
#define MSG__DELETE_PGRESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__delete_pgresponse__descriptor) \
    , 0 }


typedef enum {
  MSG__REQUEST__UNION__NOT_SET = 0,
  MSG__REQUEST__UNION_BOOT_REQUEST = 1,
  MSG__REQUEST__UNION_STOP_REQUEST = 2,
  MSG__REQUEST__UNION_HEARTBEAT_REQUEST = 3,
  MSG__REQUEST__UNION_CREATE_PG_REQUEST = 4,
  MSG__REQUEST__UNION_DELETE_PG_REQUEST = 5,
  MSG__REQUEST__UNION_APPLY_ID_REQUEST = 6,
  MSG__REQUEST__UNION_CREATE_POOL_REQUEST = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MSG__REQUEST__UNION__CASE)
} Msg__Request__UnionCase;

struct  Msg__Request
{
  ProtobufCMessage base;
  Msg__Request__UnionCase union_case;
  union {
    Msg__BootRequest *boot_request;
    Msg__StopRequest *stop_request;
    Msg__HeartbeatRequest *heartbeat_request;
    Msg__CreatePGRequest *create_pg_request;
    Msg__DeletePGRequest *delete_pg_request;
    Msg__ApplyIDRequest *apply_id_request;
    Msg__CreatePoolRequest *create_pool_request;
  };
};
#define MSG__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__request__descriptor) \
    , MSG__REQUEST__UNION__NOT_SET, {0} }


typedef enum {
  MSG__RESPONSE__UNION__NOT_SET = 0,
  MSG__RESPONSE__UNION_BOOT_RESPONSE = 1,
  MSG__RESPONSE__UNION_STOP_RESPONSE = 2,
  MSG__RESPONSE__UNION_HEARTBEAT_RESPONSE = 3,
  MSG__RESPONSE__UNION_CREATE_PG_RESPONSE = 4,
  MSG__RESPONSE__UNION_DELETE_PG_RESPONSE = 5,
  MSG__RESPONSE__UNION_APPLY_ID_RESPONSE = 6,
  MSG__RESPONSE__UNION_CREATE_POOL_RESPONSE = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MSG__RESPONSE__UNION__CASE)
} Msg__Response__UnionCase;

struct  Msg__Response
{
  ProtobufCMessage base;
  Msg__Response__UnionCase union_case;
  union {
    Msg__BootResponse *boot_response;
    Msg__StopResponse *stop_response;
    Msg__HeartbeatResponse *heartbeat_response;
    Msg__CreatePGResponse *create_pg_response;
    Msg__DeletePGResponse *delete_pg_response;
    Msg__ApplyIDResponse *apply_id_response;
    Msg__CreatePoolResponse *create_pool_response;
  };
};
#define MSG__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&msg__response__descriptor) \
    , MSG__RESPONSE__UNION__NOT_SET, {0} }


/* Msg__CreatePoolRequest methods */
void   msg__create_pool_request__init
                     (Msg__CreatePoolRequest         *message);
size_t msg__create_pool_request__get_packed_size
                     (const Msg__CreatePoolRequest   *message);
size_t msg__create_pool_request__pack
                     (const Msg__CreatePoolRequest   *message,
                      uint8_t             *out);
size_t msg__create_pool_request__pack_to_buffer
                     (const Msg__CreatePoolRequest   *message,
                      ProtobufCBuffer     *buffer);
Msg__CreatePoolRequest *
       msg__create_pool_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__create_pool_request__free_unpacked
                     (Msg__CreatePoolRequest *message,
                      ProtobufCAllocator *allocator);
/* Msg__CreatePoolResponse methods */
void   msg__create_pool_response__init
                     (Msg__CreatePoolResponse         *message);
size_t msg__create_pool_response__get_packed_size
                     (const Msg__CreatePoolResponse   *message);
size_t msg__create_pool_response__pack
                     (const Msg__CreatePoolResponse   *message,
                      uint8_t             *out);
size_t msg__create_pool_response__pack_to_buffer
                     (const Msg__CreatePoolResponse   *message,
                      ProtobufCBuffer     *buffer);
Msg__CreatePoolResponse *
       msg__create_pool_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__create_pool_response__free_unpacked
                     (Msg__CreatePoolResponse *message,
                      ProtobufCAllocator *allocator);
/* Msg__DeletePoolRequest methods */
void   msg__delete_pool_request__init
                     (Msg__DeletePoolRequest         *message);
size_t msg__delete_pool_request__get_packed_size
                     (const Msg__DeletePoolRequest   *message);
size_t msg__delete_pool_request__pack
                     (const Msg__DeletePoolRequest   *message,
                      uint8_t             *out);
size_t msg__delete_pool_request__pack_to_buffer
                     (const Msg__DeletePoolRequest   *message,
                      ProtobufCBuffer     *buffer);
Msg__DeletePoolRequest *
       msg__delete_pool_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__delete_pool_request__free_unpacked
                     (Msg__DeletePoolRequest *message,
                      ProtobufCAllocator *allocator);
/* Msg__DeletePoolResponse methods */
void   msg__delete_pool_response__init
                     (Msg__DeletePoolResponse         *message);
size_t msg__delete_pool_response__get_packed_size
                     (const Msg__DeletePoolResponse   *message);
size_t msg__delete_pool_response__pack
                     (const Msg__DeletePoolResponse   *message,
                      uint8_t             *out);
size_t msg__delete_pool_response__pack_to_buffer
                     (const Msg__DeletePoolResponse   *message,
                      ProtobufCBuffer     *buffer);
Msg__DeletePoolResponse *
       msg__delete_pool_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__delete_pool_response__free_unpacked
                     (Msg__DeletePoolResponse *message,
                      ProtobufCAllocator *allocator);
/* Msg__ApplyIDRequest methods */
void   msg__apply_idrequest__init
                     (Msg__ApplyIDRequest         *message);
size_t msg__apply_idrequest__get_packed_size
                     (const Msg__ApplyIDRequest   *message);
size_t msg__apply_idrequest__pack
                     (const Msg__ApplyIDRequest   *message,
                      uint8_t             *out);
size_t msg__apply_idrequest__pack_to_buffer
                     (const Msg__ApplyIDRequest   *message,
                      ProtobufCBuffer     *buffer);
Msg__ApplyIDRequest *
       msg__apply_idrequest__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__apply_idrequest__free_unpacked
                     (Msg__ApplyIDRequest *message,
                      ProtobufCAllocator *allocator);
/* Msg__ApplyIDResponse methods */
void   msg__apply_idresponse__init
                     (Msg__ApplyIDResponse         *message);
size_t msg__apply_idresponse__get_packed_size
                     (const Msg__ApplyIDResponse   *message);
size_t msg__apply_idresponse__pack
                     (const Msg__ApplyIDResponse   *message,
                      uint8_t             *out);
size_t msg__apply_idresponse__pack_to_buffer
                     (const Msg__ApplyIDResponse   *message,
                      ProtobufCBuffer     *buffer);
Msg__ApplyIDResponse *
       msg__apply_idresponse__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__apply_idresponse__free_unpacked
                     (Msg__ApplyIDResponse *message,
                      ProtobufCAllocator *allocator);
/* Msg__BootRequest methods */
void   msg__boot_request__init
                     (Msg__BootRequest         *message);
size_t msg__boot_request__get_packed_size
                     (const Msg__BootRequest   *message);
size_t msg__boot_request__pack
                     (const Msg__BootRequest   *message,
                      uint8_t             *out);
size_t msg__boot_request__pack_to_buffer
                     (const Msg__BootRequest   *message,
                      ProtobufCBuffer     *buffer);
Msg__BootRequest *
       msg__boot_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__boot_request__free_unpacked
                     (Msg__BootRequest *message,
                      ProtobufCAllocator *allocator);
/* Msg__BootResponse methods */
void   msg__boot_response__init
                     (Msg__BootResponse         *message);
size_t msg__boot_response__get_packed_size
                     (const Msg__BootResponse   *message);
size_t msg__boot_response__pack
                     (const Msg__BootResponse   *message,
                      uint8_t             *out);
size_t msg__boot_response__pack_to_buffer
                     (const Msg__BootResponse   *message,
                      ProtobufCBuffer     *buffer);
Msg__BootResponse *
       msg__boot_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__boot_response__free_unpacked
                     (Msg__BootResponse *message,
                      ProtobufCAllocator *allocator);
/* Msg__StopRequest methods */
void   msg__stop_request__init
                     (Msg__StopRequest         *message);
size_t msg__stop_request__get_packed_size
                     (const Msg__StopRequest   *message);
size_t msg__stop_request__pack
                     (const Msg__StopRequest   *message,
                      uint8_t             *out);
size_t msg__stop_request__pack_to_buffer
                     (const Msg__StopRequest   *message,
                      ProtobufCBuffer     *buffer);
Msg__StopRequest *
       msg__stop_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__stop_request__free_unpacked
                     (Msg__StopRequest *message,
                      ProtobufCAllocator *allocator);
/* Msg__StopResponse methods */
void   msg__stop_response__init
                     (Msg__StopResponse         *message);
size_t msg__stop_response__get_packed_size
                     (const Msg__StopResponse   *message);
size_t msg__stop_response__pack
                     (const Msg__StopResponse   *message,
                      uint8_t             *out);
size_t msg__stop_response__pack_to_buffer
                     (const Msg__StopResponse   *message,
                      ProtobufCBuffer     *buffer);
Msg__StopResponse *
       msg__stop_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__stop_response__free_unpacked
                     (Msg__StopResponse *message,
                      ProtobufCAllocator *allocator);
/* Msg__HeartbeatRequest methods */
void   msg__heartbeat_request__init
                     (Msg__HeartbeatRequest         *message);
size_t msg__heartbeat_request__get_packed_size
                     (const Msg__HeartbeatRequest   *message);
size_t msg__heartbeat_request__pack
                     (const Msg__HeartbeatRequest   *message,
                      uint8_t             *out);
size_t msg__heartbeat_request__pack_to_buffer
                     (const Msg__HeartbeatRequest   *message,
                      ProtobufCBuffer     *buffer);
Msg__HeartbeatRequest *
       msg__heartbeat_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__heartbeat_request__free_unpacked
                     (Msg__HeartbeatRequest *message,
                      ProtobufCAllocator *allocator);
/* Msg__HeartbeatResponse methods */
void   msg__heartbeat_response__init
                     (Msg__HeartbeatResponse         *message);
size_t msg__heartbeat_response__get_packed_size
                     (const Msg__HeartbeatResponse   *message);
size_t msg__heartbeat_response__pack
                     (const Msg__HeartbeatResponse   *message,
                      uint8_t             *out);
size_t msg__heartbeat_response__pack_to_buffer
                     (const Msg__HeartbeatResponse   *message,
                      ProtobufCBuffer     *buffer);
Msg__HeartbeatResponse *
       msg__heartbeat_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__heartbeat_response__free_unpacked
                     (Msg__HeartbeatResponse *message,
                      ProtobufCAllocator *allocator);
/* Msg__CreatePGRequest methods */
void   msg__create_pgrequest__init
                     (Msg__CreatePGRequest         *message);
size_t msg__create_pgrequest__get_packed_size
                     (const Msg__CreatePGRequest   *message);
size_t msg__create_pgrequest__pack
                     (const Msg__CreatePGRequest   *message,
                      uint8_t             *out);
size_t msg__create_pgrequest__pack_to_buffer
                     (const Msg__CreatePGRequest   *message,
                      ProtobufCBuffer     *buffer);
Msg__CreatePGRequest *
       msg__create_pgrequest__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__create_pgrequest__free_unpacked
                     (Msg__CreatePGRequest *message,
                      ProtobufCAllocator *allocator);
/* Msg__CreatePGResponse methods */
void   msg__create_pgresponse__init
                     (Msg__CreatePGResponse         *message);
size_t msg__create_pgresponse__get_packed_size
                     (const Msg__CreatePGResponse   *message);
size_t msg__create_pgresponse__pack
                     (const Msg__CreatePGResponse   *message,
                      uint8_t             *out);
size_t msg__create_pgresponse__pack_to_buffer
                     (const Msg__CreatePGResponse   *message,
                      ProtobufCBuffer     *buffer);
Msg__CreatePGResponse *
       msg__create_pgresponse__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__create_pgresponse__free_unpacked
                     (Msg__CreatePGResponse *message,
                      ProtobufCAllocator *allocator);
/* Msg__DeletePGRequest methods */
void   msg__delete_pgrequest__init
                     (Msg__DeletePGRequest         *message);
size_t msg__delete_pgrequest__get_packed_size
                     (const Msg__DeletePGRequest   *message);
size_t msg__delete_pgrequest__pack
                     (const Msg__DeletePGRequest   *message,
                      uint8_t             *out);
size_t msg__delete_pgrequest__pack_to_buffer
                     (const Msg__DeletePGRequest   *message,
                      ProtobufCBuffer     *buffer);
Msg__DeletePGRequest *
       msg__delete_pgrequest__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__delete_pgrequest__free_unpacked
                     (Msg__DeletePGRequest *message,
                      ProtobufCAllocator *allocator);
/* Msg__DeletePGResponse methods */
void   msg__delete_pgresponse__init
                     (Msg__DeletePGResponse         *message);
size_t msg__delete_pgresponse__get_packed_size
                     (const Msg__DeletePGResponse   *message);
size_t msg__delete_pgresponse__pack
                     (const Msg__DeletePGResponse   *message,
                      uint8_t             *out);
size_t msg__delete_pgresponse__pack_to_buffer
                     (const Msg__DeletePGResponse   *message,
                      ProtobufCBuffer     *buffer);
Msg__DeletePGResponse *
       msg__delete_pgresponse__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__delete_pgresponse__free_unpacked
                     (Msg__DeletePGResponse *message,
                      ProtobufCAllocator *allocator);
/* Msg__Request methods */
void   msg__request__init
                     (Msg__Request         *message);
size_t msg__request__get_packed_size
                     (const Msg__Request   *message);
size_t msg__request__pack
                     (const Msg__Request   *message,
                      uint8_t             *out);
size_t msg__request__pack_to_buffer
                     (const Msg__Request   *message,
                      ProtobufCBuffer     *buffer);
Msg__Request *
       msg__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__request__free_unpacked
                     (Msg__Request *message,
                      ProtobufCAllocator *allocator);
/* Msg__Response methods */
void   msg__response__init
                     (Msg__Response         *message);
size_t msg__response__get_packed_size
                     (const Msg__Response   *message);
size_t msg__response__pack
                     (const Msg__Response   *message,
                      uint8_t             *out);
size_t msg__response__pack_to_buffer
                     (const Msg__Response   *message,
                      ProtobufCBuffer     *buffer);
Msg__Response *
       msg__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   msg__response__free_unpacked
                     (Msg__Response *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Msg__CreatePoolRequest_Closure)
                 (const Msg__CreatePoolRequest *message,
                  void *closure_data);
typedef void (*Msg__CreatePoolResponse_Closure)
                 (const Msg__CreatePoolResponse *message,
                  void *closure_data);
typedef void (*Msg__DeletePoolRequest_Closure)
                 (const Msg__DeletePoolRequest *message,
                  void *closure_data);
typedef void (*Msg__DeletePoolResponse_Closure)
                 (const Msg__DeletePoolResponse *message,
                  void *closure_data);
typedef void (*Msg__ApplyIDRequest_Closure)
                 (const Msg__ApplyIDRequest *message,
                  void *closure_data);
typedef void (*Msg__ApplyIDResponse_Closure)
                 (const Msg__ApplyIDResponse *message,
                  void *closure_data);
typedef void (*Msg__BootRequest_Closure)
                 (const Msg__BootRequest *message,
                  void *closure_data);
typedef void (*Msg__BootResponse_Closure)
                 (const Msg__BootResponse *message,
                  void *closure_data);
typedef void (*Msg__StopRequest_Closure)
                 (const Msg__StopRequest *message,
                  void *closure_data);
typedef void (*Msg__StopResponse_Closure)
                 (const Msg__StopResponse *message,
                  void *closure_data);
typedef void (*Msg__HeartbeatRequest_Closure)
                 (const Msg__HeartbeatRequest *message,
                  void *closure_data);
typedef void (*Msg__HeartbeatResponse_Closure)
                 (const Msg__HeartbeatResponse *message,
                  void *closure_data);
typedef void (*Msg__CreatePGRequest_Closure)
                 (const Msg__CreatePGRequest *message,
                  void *closure_data);
typedef void (*Msg__CreatePGResponse_Closure)
                 (const Msg__CreatePGResponse *message,
                  void *closure_data);
typedef void (*Msg__DeletePGRequest_Closure)
                 (const Msg__DeletePGRequest *message,
                  void *closure_data);
typedef void (*Msg__DeletePGResponse_Closure)
                 (const Msg__DeletePGResponse *message,
                  void *closure_data);
typedef void (*Msg__Request_Closure)
                 (const Msg__Request *message,
                  void *closure_data);
typedef void (*Msg__Response_Closure)
                 (const Msg__Response *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor msg__create_pool_request__descriptor;
extern const ProtobufCMessageDescriptor msg__create_pool_response__descriptor;
extern const ProtobufCMessageDescriptor msg__delete_pool_request__descriptor;
extern const ProtobufCMessageDescriptor msg__delete_pool_response__descriptor;
extern const ProtobufCMessageDescriptor msg__apply_idrequest__descriptor;
extern const ProtobufCMessageDescriptor msg__apply_idresponse__descriptor;
extern const ProtobufCMessageDescriptor msg__boot_request__descriptor;
extern const ProtobufCMessageDescriptor msg__boot_response__descriptor;
extern const ProtobufCMessageDescriptor msg__stop_request__descriptor;
extern const ProtobufCMessageDescriptor msg__stop_response__descriptor;
extern const ProtobufCMessageDescriptor msg__heartbeat_request__descriptor;
extern const ProtobufCMessageDescriptor msg__heartbeat_response__descriptor;
extern const ProtobufCMessageDescriptor msg__create_pgrequest__descriptor;
extern const ProtobufCMessageDescriptor msg__create_pgresponse__descriptor;
extern const ProtobufCMessageDescriptor msg__delete_pgrequest__descriptor;
extern const ProtobufCMessageDescriptor msg__delete_pgresponse__descriptor;
extern const ProtobufCMessageDescriptor msg__request__descriptor;
extern const ProtobufCMessageDescriptor msg__response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_messages_2eproto__INCLUDED */
